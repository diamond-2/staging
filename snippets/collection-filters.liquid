
<link rel="stylesheet" href="{{'filter-layout.css' | asset_url }}">
<link rel="stylesheet" href="//code.jquery.com/ui/1.13.1/themes/base/jquery-ui.css">
<script src="https://code.jquery.com/ui/1.13.1/jquery-ui.js"></script>
<script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/jqueryui-touch-punch/0.2.3/jquery.ui.touch-punch.min.js"></script>

{% if template.suffix != 'loose-stone-plp'%}
<style>
.collection-filter-wrapper[data-id="global.ls_cert_stn_wgt_crt"],
  .collection-filter-wrapper[data-id="global.ls_cert_color"],
  .collection-filter-wrapper[data-id="global.ls_cert_clarity"],
  .collection-filter-wrapper[data-id="global.ls_cert_Polish"],
  .collection-filter-wrapper[data-id="global.ls_cert_Symmetry"],
  .collection-filter-wrapper[data-id="global.ls_cert_Fluorescence"],
  .collection-filter-wrapper[data-id="global.ls_cert_Tbl_avg_perc"],
  .collection-filter-wrapper[data-id="global.ls_cert_polish"],
  .collection-filter-wrapper[data-id="global.ls_cert_symmetry"],
  .collection-filter-wrapper[data-id="global.ls_cert_fluorescence"],
  .collection-filter-wrapper[data-id="global.ls_cert_depth"],
  .collection-filter-wrapper[data-id="global.ls_cert_table"],
  .collection-filter-wrapper[data-id="global.ls_cert_ratio"],
  .collection-filter-wrapper[data-id="global.ls_cert_shape"],  
    
  .collection-filter-wrapper[data-id="global.ls_cert_tbl_avg_perc"],
  .collection-filter-wrapper[data-id="global.ls_cert_igi_totalcutgrade"],
  .collection-filter-wrapper[data-id="global.ls_cert_hrdsym_totalcutgrade"],
  .collection-filter-wrapper[data-id="global.ls_cert_hrdtotalcutgrade"],
  .collection-filter-wrapper[data-id="global.ls_cert_giasym"],
  .collection-filter-wrapper[data-id="global.ls_cert_gia2005totalcutgrade"],
  .collection-filter-wrapper[data-id="global.ls_cert_culet"],
  .collection-filter-wrapper[data-id="global.ls_cert_pavil_width"],
  .collection-filter-wrapper[data-id="global.ls_cert_stars_width"],
  .collection-filter-wrapper[data-id="global.ls_cert_pvlnh_perc"],
  .collection-filter-wrapper[data-id="global.ls_cert_pvln_agl"],
  .collection-filter-wrapper[data-id="global.ls_cert_grdlavg_perc"],
  .collection-filter-wrapper[data-id="global.ls_cert_girdlemax"],
  .collection-filter-wrapper[data-id="global.ls_cert_girdlemin"],
  .collection-filter-wrapper[data-id="global.ls_cert_girdle"],
  .collection-filter-wrapper[data-id="global.ls_cert_crw_hgtperc"],
  .collection-filter-wrapper[data-id="global.ls_cert_crw_agl_deg"],
  .collection-filter-wrapper[data-id="global.ls_cert_height_perc"],
  .collection-filter-wrapper[data-id="global.ls_cert_height_mm"],
  .collection-filter-wrapper[data-id="global.ls_cert_diamtrs_avg"],
  .collection-filter-wrapper[data-id="global.ls_cert_diamtrs_max"],
  .collection-filter-wrapper[data-id="global.ls_cert_diamtrs_min"] {
  display: none!important;
}
</style>
{% endif %}
<script type="text/javascript">

  $(function(){
    {% include 'createpagination' %}

    if($('body').attr('data-template') == 'jewellery-plp' && $('body').attr('data-load') == 'jewellery-plp-initial'){
      var maxResults = 18;
    }else {
      var maxResults = 16;
    }    
    if(window.location.search.indexOf('?&') > -1) {
      var defFilterName = 'restrictBy[collections]={{ collection.title | replace: ',' , '\,' | url_encode }}'+window.location.search.split('?')[1];
    } else {
      var defFilterName = 'restrictBy[collections]={{ collection.title | replace: ',' , '\,' | url_encode }}';
    }
    console.log('defFilterName==>', defFilterName);

      var searchsortby = $(document).find("#sortByFilter option:selected").attr('value'); // console.log('sortyBy==> '+ searchsortby);
      var searchBaseUrl = 'https://www.searchanise.com/getresults?api_key=7r9L5P8L4h';

      var queryString = '&output=jsonp&sortBy='+ searchsortby +'&'+'startIndex=0&maxResults=' + maxResults + '&items=true&facets=true&facetsShowUnavailableOptions=true&' + defFilterName;
      var searchData = '';
      var filters = '';

    // $(document).on('change', '[data-collection-filter-section] select', function(){
    //   // console.log('select changes');
    //   var getSelectedVal = $(this).val(); console.log(getSelectedVal);
    //   $(this).find('option:selected').attr('selected','selected').siblings().removeAttr('selected');
    //   var getId = $(this).attr('id');  console.log(getId);

    //   $(document).find('[data-collection-filter-section] input[id="'+getId+'-filter"]').val(getSelectedVal).attr('checked', 'checked');
    //   $(this).next(':checkbox').trigger('change');
    // });


    $(document).on('click', '.filter-option-name', function(){
      $(this).closest('.filters-toolbar__input').toggleClass('open-dd');
      $(this).next('.filter-dd').slideToggle()
      $(this).closest('.collection-filter-wrapper').siblings().find('.filter-dd').slideUp();
      $(this).closest('.collection-filter-wrapper').siblings().find('.filters-toolbar__input').removeClass('open-dd');
    })

     // Clear all Filter Event
     $(document).on('click', '.clear-filters a', function(){
      $('[data-active-filters]').html('');
      $(document).find('[data-collection-listing-container] [data-view="grid"] [data-list-item], [data-collection-listing-container] .list-view-items tbody').html('');
      $(document).find('[data-collection-filter-section] :checkbox:checked').prop('checked', false)//.trigger('change');
      
      $('.slider-range-selected #collection-price-min-selected').text(' ');
      $('.slider-range-selected #collection-price-max-selected').text(' ');
      $('#slider-range .ui-corner-all.ui-widget-header').css("width", "100%");
      $('#slider-range .ui-corner-all.ui-widget-header').css("left", "0%");
      $('div#slider-range span.ui-slider-handle:first-child').css("display, none");
     
      var newQueryString = '&output=jsonp&sortBy='+ searchsortby +'&'+'startIndex=0&maxResults=' + maxResults + '&items=true&facets=true&facetsShowUnavailableOptions=true&' + defFilterName;
      $(document).find('[data-collection-filter-section] .collection-filter-wrapper').each(function(){
        var thisFilterName = $(this).data('filter'); //// console.log('thisFilterName==> ' + thisFilterName);
        var filValues = $(this).find('input[type="checkbox"]:checked');
        var filSelected = '';
        if(filValues.length > 0){
          filValues.each(function(i){ 
            filSelected+=$(this).closest('input[type="checkbox"]:checked ').val();
            if(i+1 < filValues.length){
              filSelected += '|';
            }  
          });
        }
        var selFils = thisFilterName+'='+filSelected;
        if(filSelected!=''){
          newQueryString+=selFils.replace('undefined=', '');          
        } 
      });
      newQueryString+='&maxResults='+maxResults;
      // $('.dynamic-loadmore-btn-holder').hide();
      $(document).find('[data-collection-listing-container] [data-view="grid"] [data-list-item], [data-collection-listing-container] .list-view-items tbody').html('');
      searchaniseProducts(newQueryString);
      
      $('.no-result').css('display', 'none');
    });

    // Toogle Advance Loose Stone filters

    // if($('.collection-filter-wrapper-main[data-collection-filter-section]').hasClass('tenth-level-filter')){
    //     console.log('10th exist')
    //     $('.filter-block-group[data-advance-filter]').removeClass('visible-advance-filter');
    //     $(this).text(function(i, v){
    //         return v === 'Show Less' ? 'Advance Filters' : 'Show More'
    //     });
    //   }else if($('.collection-filter-wrapper-main[data-collection-filter-section]').hasClass('ninth-level-filter')){
    //     console.log('9th exist');
    //     $('.collection-filter-wrapper-main[data-collection-filter-section]').toggleClass('ninth-level-filter tenth-level-filter');
    //   }else if($('.collection-filter-wrapper-main[data-collection-filter-section]').hasClass('eighth-level-filter')){
    //     console.log('8th exist');
    //     $('.collection-filter-wrapper-main[data-collection-filter-section]').toggleClass('eighth-level-filter ninth-level-filter');
    //   }else


    $(document).on('click', '#showAdvanceFilters', function(){
       if($('.collection-filter-wrapper-main[data-collection-filter-section]').hasClass('seventh-level-filter')){
        console.log('7th exist');
        // $('.collection-filter-wrapper-main[data-collection-filter-section]').toggleClass('seventh-level-filter eighth-level-filter');
        $('.filter-block-group[data-advance-filter]').removeClass('visible-advance-filter');
        $(this).text(function(i, v){
            return v === 'Show Less' ? 'Advance Filters' : 'Show More'
        });
        $('html, body').animate({
        scrollTop: $(".collection-header").offset().top+50
    }, 1000);
        // $('').animate({scrollTop:0}, '1000');
      }else if($('.collection-filter-wrapper-main[data-collection-filter-section]').hasClass('sixth-level-filter')){
        console.log('6th exist');
        $('.collection-filter-wrapper-main[data-collection-filter-section]').toggleClass('sixth-level-filter seventh-level-filter');
        $(this).text(function(i, v){
            return v === 'Show More' ? 'Show Less' : 'Advance Filters'
        });
      }else if($('.collection-filter-wrapper-main[data-collection-filter-section]').hasClass('fifth-level-filter')){
        console.log('5th exist');
        $('.collection-filter-wrapper-main[data-collection-filter-section]').toggleClass('fifth-level-filter sixth-level-filter');
      }else if($('.collection-filter-wrapper-main[data-collection-filter-section]').hasClass('fourth-level-filter')){
        console.log('4th exist');
        $('.collection-filter-wrapper-main[data-collection-filter-section]').toggleClass('fourth-level-filter fifth-level-filter');
      }else if($('.collection-filter-wrapper-main[data-collection-filter-section]').hasClass('third-level-filter')){
        console.log('3th exist');
        $('.collection-filter-wrapper-main[data-collection-filter-section]').toggleClass('third-level-filter fourth-level-filter ');
      }else if($('.collection-filter-wrapper-main[data-collection-filter-section]').hasClass('second-level-filter')){
        console.log('2th exist');
        $('.collection-filter-wrapper-main[data-collection-filter-section]').toggleClass('second-level-filter third-level-filter ');
      }else if($('.collection-filter-wrapper-main[data-collection-filter-section]').hasClass('first-level-filter')){
        console.log('1th exist');
        $('.collection-filter-wrapper-main[data-collection-filter-section]').toggleClass('first-level-filter second-level-filter ');
      }else {
        console.log('Enter in Else Part of Advnce filter')
        $('.filter-block-group[data-advance-filter]').addClass('visible-advance-filter');
        $('.collection-filter-wrapper-main[data-collection-filter-section]').addClass('first-level-filter');
        $(this).text(function(i, v){
            return v === 'Advance Filters' ? 'Show More' : 'Show Less'
        });
      }
      
      
    });


    // Toggle enable/disable Filters
    $(document).on('click', 'span[data-filter-toggle]', function(){
      let $thisFilter = $(this);
      $thisFilter.toggleClass('enable-filter');
      // setTimeout(function(){
        if($thisFilter.hasClass('enable-filter')){
          console.log('ere111');
          $thisFilter.closest('[data-group="range-slider-group"]').removeClass('disable-filter');
        }else {
          console.log('ere222')
          $thisFilter.closest('[data-group="range-slider-group"]').addClass('disable-filter');
        }
      // },1000)
      
    })

    // Clear filter Event
    $(document).on('click', '[data-clear-filter]', function(){
      var getKey = $(this).data('key');      
   //console.log("getKey--getKey", getKey)
      if(getKey == 'price-val-range'){
        let minPrice = $('#collection-price-min').data('price');
        let highestPrice = $('#collection-price-max').data('price');
        let selectedMinPrice = $('#collection-price-min').data('price');
        let SelectedHighestPrice = $('#collection-price-max').data('price');
        $("#slider-range").slider("option", "values", [$('#collection-price-min').data('price'), $('#collection-price-max').data('price')]);
        let resetPriceSlider = '&restrictBy[price]='+$('#collection-price-min').data('price')+','+$('#collection-price-max').data('price')+'';
        $('#price-val-range').val(resetPriceSlider).attr('data-opt-val', resetPriceSlider);
        $('#collection-price-min-selected, #collection-price-max-selected').text('');
        // initializingPriceSlider(minPrice, highestPrice, selectedMinPrice, SelectedHighestPrice);
      }
      $(document).find('[data-collection-filter-section] :checkbox:checked[id="'+getKey+'"]').prop('checked', false)//.trigger('change');    
      $(this).remove();        
      var newQueryString = '&output=jsonp&sortBy='+ searchsortby +'&'+'startIndex=0&maxResults=' + maxResults + '&items=true&facets=true&facetsShowUnavailableOptions=true&' + defFilterName;
      $(document).find('[data-collection-filter-section] .collection-filter-wrapper').each(function(){
        var thisFilterName = $(this).data('filter'); //// console.log('thisFilterName==> ' + thisFilterName);
        var filValues = $(this).find('input[type="checkbox"]:checked');
        var filSelected = '';
        if(filValues.length > 0){
          filValues.each(function(i){ 
            filSelected+=$(this).closest('input[type="checkbox"]:checked ').val();
            if(i+1 < filValues.length){
              filSelected += '|';
            }  
          });
        }
        var selFils = thisFilterName+'='+filSelected;
        if(filSelected!=''){
          newQueryString+=selFils.replace('undefined=', '');          
        } 
      });
      newQueryString+='&maxResults='+maxResults;
      // $('.dynamic-loadmore-btn-holder').hide();
      $(document).find('[data-collection-listing-container] [data-view="grid"] [data-list-item], [data-collection-listing-container] .list-view-items tbody').html('');
      searchaniseProducts(newQueryString);

    });

    $(document).on('change','#price-val-range', function(){
   //console.log('PriceRangeChange', $('#collection-price-min-selected').text().length);
      if(!$(this).is('checked')){
        $(this).prop('checked', true);
      }          
    });

    $('body').on('change','[data-collection-filter-section] input[type="checkbox"]', function(){ 
      console.log('onchangethit')  
      $('[data-collection-listing-container]').addClass('inital-load');    
      var newQueryString = filterOnSelect();     
      searchaniseProducts(newQueryString);  
    });

    $('body').on('change','#sortByFilter', function(){ 
      var getSelectedVal = $(this).val();
      $(this).find('option:selected').attr('selected','selected').siblings().removeAttr('selected'); 
      var newQueryString = filterOnSelect();     
      //// console.log('New Query Stirng --------------')
      //// console.log(newQueryString); 	
     // // console.log('New Query Stirng --------------')
      searchaniseProducts(newQueryString);  
    });

    // Hide dropdown when clicked outside
    // $(document).click(function(e) {
    //   if( e.target.class != 'collection-filter-wrapper') {
    //     $(".filter-dd").hide();
    //   }
    // });

    function LoadMoreItems() {
      $('.dynamicloadMore-btn').hide();
      $('.dynamic-loader-spiner').show();
    }
    
    $(document).on('click', '.dynamicloadMore-btn', function(){
      
      var currentPageOld = Number($(document).find('[data-pclimit]').text());
      
      
      $('[data-collection-listing-container]').removeClass('inital-load');  
      LoadMoreItems(); 
        var currentShowItems = Number($(document).find('[data-pclimit]').text()); console.log('Currently show Items == >' + currentShowItems);
        maxResults = 16;
        var Startitems = currentPageOld;
          console.log('querystging Start index', Startitems)

          var newQueryString = '&output=jsonp&sortBy='+ searchsortby +'&'+'startIndex='+ Startitems +'&maxResults=' + maxResults + '&items=true&facets=true&facetsShowUnavailableOptions=true&' + defFilterName;
          $(document).find('[data-collection-filter-section] .collection-filter-wrapper').each(function(){
            var thisFilterName = $(this).data('filter'); //// console.log('thisFilterName==> ' + thisFilterName);
            var filValues = $(this).find('input[type="checkbox"]:checked');
            var filSelected = '';
            if(filValues.length > 0){
              filValues.each(function(i){ 
                filSelected+=$(this).closest('input[type="checkbox"]:checked ').val();
                if(i+1 < filValues.length){
                  filSelected += '|';
                }  
              });
            }
            var selFils = thisFilterName+'='+filSelected;
            if(filSelected!=''){
              newQueryString+=selFils.replace('undefined=', '');          
            } 
          });
          newQueryString+='&maxResults='+maxResults;
          searchaniseProducts(newQueryString);
          setTimeout(function(){
            var totalPage = $('.dynamic-pagination span a').length;
            var currentPageitemess = parseInt($('.dynamic-pagination span a.active').text());
            if(totalPage === currentPageitemess) {
              $(document).find('.dynamic-loadmore-btn-box, .dynamicloadMore-btn').hide();
              $(document).find('.dynamic-loader-spiner').hide();
            }        
          },2000);   
    });
    searchaniseFiltersOnload(queryString);
    function searchaniseFiltersOnload(queryString) {
      $(document).find('.no-result').remove();
    $.ajax({	
        url: searchBaseUrl + queryString,
        dataType: 'jsonp',
        success: function(data){		
          searchData = data;
          // console.log('\n\n----------------');
          // console.log(searchData);    
          // console.log('----------------\n\n');
          if(data.hasOwnProperty('error') ==  true){
          // $('.sn-loader, .filter-loader-icn').fadeOut();
          $('[data-collection-listing-container]').addClass('full-width').prepend('<p class="no-result">There are currently no products in this collection, please check back later</p>');
        } else {
          $('#filter-cta-mob .filter-result-count').text(data.totalItems);
          $('.collection-header').data('limit');
          if($('.collection-header').attr('data-limit') < searchData.totalItems){
            //// console.log('less then Search limit -- show pagination');
            ///$('.collection-header-result-per-page').closest('.collection-bottom-pagination-data').removeClass('hidepaginate');
              //$('.collection-header-result-per-page').css('opacity', 1).css('pointer-events', 'initial');;
          }else{
           // // console.log('greater thene Search limit -- hide pagination');
            // $('.collection-header-result-per-page').css('opacity', 0).css('pointer-events', 'none');
            // $('.collection-header-result-per-page').closest('.collection-bottom-pagination-data').addClass('hidepaginate');
          }   
          filters = searchData.facets;            
          
          //Init
          //var getmaxitemperpage = $('select.result-per-page option:selected').attr('data-count');
          createFilters();
          // printProducts(searchData.items);
          if($('body').attr('data-template') == 'jewellery-plp' && $('body').attr('data-load') == 'jewellery-plp-initial' || window.location.search.indexOf('?&') > -1){
            console.log('Onload pagination')
         //console.log('Yes jewellery-plp template');
            var itemPerPage = 18;
       console.log("test", searchData.totalItems+'-===--'+itemPerPage + data.startIndex)
          if(searchData.totalItems > itemPerPage + data.startIndex) {
            $('.__product-count__totalCount').attr('data-tpcount', searchData.totalItems).text(data.totalItems);
            $('.__product-count__limit').attr('data-pclimit', itemPerPage).text(itemPerPage + data.startIndex);
            $(document).find('.dynamic-loadmore-btn-box, .dynamicloadMore-btn').show();
            $(document).find('.dynamic-loader-spiner').hide();
          } else {
            $('.__product-count__totalCount').attr('data-tpcount', searchData.totalItems).text(data.totalItems);
            $('.__product-count__limit').attr('data-pclimit', data.totalItems).text(data.totalItems);
            $(document).find('.dynamic-loadmore-btn-box, .dynamicloadMore-btn').hide();
            $(document).find('.dynamic-loader-spiner').hide();
          }
          if(searchData.totalItems == 0) {
            $('[data-collection-listing-container]').addClass('full-width').prepend('<p class="no-result text-center">There are currently no products in this collection, please check back later</p>');
            $(document).find('.dynamic-loadmore-btn-box, .dynamic-loader-spiner, .filters-toolbar__item--count').hide();            
          }


          
          //Init
          var getmaxitemperpage = 18;
          // createFilters();
          createPagination(searchData.totalItems, searchData.startIndex/getmaxitemperpage); 
          printProducts(searchData.items);

        }

          // setTimeout(function(){
          //   location.reload();
          // },7000);

        }

        }       
      });
    }

    function searchaniseProducts(queryString) {
      $(document).find('.no-result').remove();
    $.ajax({	
        url: searchBaseUrl + queryString,
        dataType: 'jsonp',
        success: function(data){		
          searchData = data;
          updateFilters(searchData.facets);
          // console.log('\n\n----------------');
          // console.log(searchData);    
          // console.log('----------------\n\n');
          if(data.hasOwnProperty('error') ==  true){
          // $('.sn-loader, .filter-loader-icn').fadeOut();
          $('[data-collection-listing-container]').addClass('full-width').prepend('<p class="no-result">There are currently no products in this collection, please check back later</p>');
        } else {
          $(document).find('.filters-toolbar__item--count').show();

          var itemPerPage = $('.collection-header').data('limit');
          // var showItemPerPage = 
       //console.log('paginatelimit--')
       //console.log(itemPerPage+'----'+data.totalItems)
       console.log('genric pagination')
          if(data.totalItems > itemPerPage + data.startIndex) {
            console.log('Innn-1');
            $('.__product-count__totalCount').attr('data-tpcount', data.totalItems).text(data.totalItems);
            $('.__product-count__limit').attr('data-pclimit', itemPerPage).text(itemPerPage + data.startIndex);
            $(document).find('.dynamic-loadmore-btn-box, .dynamicloadMore-btn').show();
            $(document).find('.dynamic-loader-spiner').hide();
          } else {
            console.log('Innn-2');
            $('.__product-count__totalCount').attr('data-tpcount', data.totalItems).text(data.totalItems);
            $('.__product-count__limit').attr('data-pclimit', data.totalItems).text(data.totalItems);
            $(document).find('.dynamic-loadmore-btn-box, .dynamicloadMore-btn').hide();
            $(document).find('.dynamic-loader-spiner').hide();
          }
          if(data.totalItems == 0) {
            console.log('Innn-3');
            $('[data-collection-listing-container]').addClass('full-width').prepend('<p class="no-result text-center">There are currently no products in this collection, please check back later</p>');
            $(document).find('.dynamic-loadmore-btn-box, .dynamic-loader-spiner, .filters-toolbar__item--count').hide();
            
          }
          
          filters = searchData.facets;  
          
          
          //Init
          if($('body').attr('data-template') == 'jewellery-plp' && $('body').attr('data-load') == 'jewellery-plp-initial'){
            var getmaxitemperpage = 18;
          } else {
            var getmaxitemperpage = 16;  
          }
          
          
          // createFilters();
          createPagination(searchData.totalItems, searchData.startIndex/getmaxitemperpage); 
          printProducts(searchData.items);
        }

        }       
      });
    }   
    
     

    
    //Create Filters
    	function createFilters(){ 
          $('[data-collection-filter-section]').empty();
          if($('body').attr('data-template') == 'loose-stone-plp'){ 
            $('[data-collection-filter-section]').append(' <div class="filter-block-group ls-filter-wrapper range-filters" data-position="1" data-group="range-group"></div><div class="filter-block-group ls-filter-wrapper list-filters" data-position="2" data-group="list-group"></div><div class="filter-block-group ls-filter-wrapper list-filters" data-advance-filter data-position="3" data-group="list-group"></div><div class="filter-block-group ls-filter-wrapper range-filters" data-advance-filter data-position="4" data-group="range-group"></div><div class="filter-block-group ls-filter-wrapper list-filters" data-advance-filter data-position="5" data-group="list-group"></div>')
          } 
          $.each(filters, function(key, val){ 
            var filterName = val.attribute;
            //console.log('FilterName ==>', filterName);
            var filterTitle = val.title;
            var filterId = filterTitle.toLowerCase().replace(' ', '-');
            var filterVal = val.buckets;
            var sidebarHtml = '';
            // Range type layout for price filter
            if($('body').attr('data-template') != 'loose-stone-plp'){
            if(filterTitle == 'Price') {
              var selectOption = '';
              var minPrice = parseFloat(filterVal[0].from).toFixed(0); console.log('minPrice', theme.Currency.formatMoney(minPrice*100, theme.moneyFormat).replace('.00',''));
              var highestPrice = parseFloat(filterVal[0].to).toFixed(0); console.log('highestPrice', highestPrice);
              var selectedMinPrice = parseFloat(filterVal[0].left).toFixed(0); console.log('selectedMinPrice',selectedMinPrice);
              var SelectedHighestPrice = parseFloat(filterVal[0].right).toFixed(0); console.log('SelectedHighestPrice', SelectedHighestPrice);
              if(filterVal[0].selected != undefined && filterVal[0].selected != '' && filterVal[0].selected == 'true'){
                var checked = 'checked=checked';
              }
              selectOption+='<div class="collection-filter-wrapper" data-filter="&amp;restrictBy[price]" data-filter-type="price" data-id="'+filterId+'">'
              selectOption += '<div name="product-type" id="'+filterId+'" class="filters-toolbar__input">';
              selectOption += '<span class="filter-option-name">'+filterTitle+'</span>';
              selectOption += '<ul class="filter-dd"> <li>';
                selectOption += '<div class="slider-range-selected"><span id="collection-price-min-selected"></span><span id="collection-price-max-selected"></span></div>'

              selectOption+='<div id="slider-range"></div><span id="collection-price-min" data-price=""></span> <span id="collection-price-max"  data-price=""></span>';
              selectOption+='<input ' + checked + ' type="checkbox" data-opt-val="&restrictBy[price]=' + theme.Currency.formatMoney(minPrice*100, theme.moneyFormat).replace('.00','') + ','+ theme.Currency.formatMoney(highestPrice*100, theme.moneyFormat).replace('.00','') +'" value="' + theme.Currency.formatMoney(minPrice*100, theme.moneyFormat).replace('.00','') + '-'+ theme.Currency.formatMoney(highestPrice*100, theme.moneyFormat).replace('.00','') +'" id="price-val-range" class="visually-hidden" />';  
              
              
              // selectOption+= '<div class="collection-content-area-left-content price__filter" style="max-width: 280px;"><div class="collection-content-area-left-content-wrapper"><div class="collection-other-list">' + selectOption +'</div></div></div>';
              selectOption += '</div>';
              selectOption += '</li></ul>';
              selectOption += '</div> </div>'; 
              if(minPrice != highestPrice){ 
                // $('.collection-filters').append(sidebarHtml);
                $('[data-collection-filter-section]').prepend(selectOption); 
              };
              if($('#slider-range .ui-slider-range').length <= 0){
                initializingPriceSlider(minPrice, highestPrice, selectedMinPrice, SelectedHighestPrice);
              }  

            } else 
            
            if(filterTitle == 'Collections'){


            } else if(filterTitle == 'Tags'){


            } else if(filterTitle == 'Discount'){


            } else if(filterTitle == 'Product type') {

            } else if(window.location.pathname.indexOf('solitaire') > -1 && filterTitle == 'global.ls_cert_Shape'){
              var counter = 0;
                  var selectOptionLabel = '<div class="filter-by-label">Shape <span><a href="/pages/gemstone-cuts" aria-label="Learn more about shapes">Learn More &gt;</a></span></div>'
                  var selectOption = '';	
              	  // var checked = '';
                  var checkVal = '';
                  var fileUrl = 'https://cdn.shopify.com/s/files/1/0575/2681/2840/files/';
                  if(filterTitle == 'global.shape_filter'){
                    filterTitle = 'Shape';
                  }
                  filterId = filterId.replace('global.', '');
                  $.each(filterVal, function(key, val){
                    var disableItem = '';

                    if(val.count >= 0){
                   //console.log('initialfilter22')
                        if(val.count == 0){
                          disableItem = 'toDisabled';
                        }
                        var show = 'toShow';
                        filterName=filterName.toLowerCase().replace(' ', '-'); 
                        var thisVal = val.value;
                        var filterVal = '&restrictBy[' + filterName + ']=' + val.value;
                        if(val.selected != undefined && val.selected != '' && val.selected == 'true'){
                          var selected = 'selected=selected';
                          var checked = 'checked=checked';
                          	  checkVal = thisVal;
                        }
                      selectOption += '<div class="collection_filter_by_shape'+ show +' '+ disableItem +'" data-shape="shape_'+encodeURIComponent(thisVal).toLowerCase()+'">';
                      selectOption += '<input type="checkbox"  id="'+filterId+'_'+encodeURIComponent(thisVal)+'-filter" ' + checked + ' class="visually-hidden" value="' + encodeURIComponent(thisVal) + '">';
                      selectOption += '<label for="'+filterId+'_'+encodeURIComponent(thisVal)+'-filter" class="filter__label">';
                      selectOption += '<img data-src="'+fileUrl+'ld_shape_'+encodeURIComponent(thisVal).toLowerCase()+'.svg" class="lazyload"><span>' + thisVal +'</span></label>';
                      selectOption += '</div>';
                        counter++;                        
                    }
                  });

                  if(counter >= 1){
                    sidebarHtml+= '<div class="collection-filter-wrapper" data-filter="&restrictBy[' + filterName + ']" data-filter-type="shape-filter">' + selectOption +'</div>';
                  	$('[data-collection-filter-section]').prepend(sidebarHtml);
                    $('[data-collection-filter-section]').prepend(selectOptionLabel);
                  }

            } else {
              //global.jewelery_category
              //current_variant.min_stn_total_crt_wt
              //global.jew_style
              //current_variant.gender
              // SELECT GOLD COLOUR
              // Common layout for print dropdown filter 
              var counter = 0;
                  var selectOption = '';	
              	  var checked = '';
                  var checkVal = '';
                  if(filterTitle == 'global.metal_type'){
                    filterTitle = 'Metal Type';
                  }
                  if(filterTitle == 'global.jewelery_category'){
                    filterTitle = 'Product Type';
                  }
                  if(filterTitle == 'global.design_style'){
                    filterTitle = 'Product Sub Type';
                  }
                  if(filterTitle == 'global.jew_style'){
                    filterTitle = 'Style';
                  }
                  if(filterTitle == 'SELECT GOLD COLOUR'){
                    filterTitle = 'Metal';
                  }
                  

                  if(filterTitle == 'global.dec_stn_total_crt_wt'){
                    filterTitle = 'CARAT WGT(CTS.)';
                  }
                  if(filterTitle == 'global.frc_stn_total_crt_wt'){
                    filterTitle = 'CARAT WEIGHT(CT. TW.)';
                  }
                  if(filterTitle == 'STCW:'){
                    filterTitle = 'CARAT  WGT(CTS.)';
                  }
                  if(filterTitle == 'global.stn_total_ct_wt'){
                    filterTitle = 'TOTAL CT. WT. (TCW)';
                  }
                  if(filterTitle == 'global.gender'){
                    filterTitle = 'Gender';
                  }
                  if(filterTitle == 'global.main_stone_type'){
                    filterTitle = 'GEMSTONE';
                  }
                  if(filterTitle == 'global.stn_solitaire_ct_wt'){
                    filterTitle = 'SOLITAIRE CT. WT.';
                  }
                  if(filterTitle == 'global.jew_stn_graded_color'){
                    filterTitle = 'Stone Color';
                  }
                  if(filterTitle == 'global.jew_stn_graded_clarity'){
                    filterTitle = 'Stone Clarity';
                  }

                  selectOption += '<div name="product-type" id="'+filterId+'" class="filters-toolbar__input">';
                    selectOption += '<span class="filter-option-name">'+filterTitle+'</span>';
                    selectOption += '<ul class="filter-dd">'
                      if(filterTitle == 'TOTAL CT. WT. (TCW)'){
                        console.log('FillterValue', filterVal);
                        var filterArrayVal = [];
                        $.each(filterVal, function(key, val){                          
                          var str = val.value;
                          if(str.indexOf(' ') > -1){
                            let firstVal = Number(str.split(' ')[0]);
                            let secondVal = str.split(' ')[1]; 
                            let converToDecimal = secondVal.split('/');
                            let getConvertedNumber =  Number(converToDecimal[0])/Number(converToDecimal[1]); console.log('convertedNumber', getConvertedNumber)
                            let finalNumber = firstVal+getConvertedNumber;
                            filterArrayVal.push(finalNumber)
                          } else {
                            let convertNumber = Number(str)
                            filterArrayVal.push(convertNumber);
                          }

                        })
                         console.log('finalArray==>>', filterArrayVal);

                         var result = {};
                         filterArrayVal.forEach((key, i) =>  result[key] = filterVal[i]);
                          console.log(result);

                            // Get the array of keys
                            var keys = Object.keys( result );

                            // Sort the keys in descending order
                            keys.sort( function ( a, b ) { return a - b; } );

                            // Iterate through the array of keys and access the corresponding object properties
                            for ( var i = 0; i < keys.length; i++ ) {
                                console.log( keys[i], result[ keys[i] ].value );
                                let ind =  keys[i];
                                let vol = result[ keys[i] ];


                                var disableItem = '';
                                if(vol.count >= 0){
                                  if(vol.count == 0){
                                      disableItem = 'toDisabled';
                                    }
                                    var show = 'toShow';
                                    filterName=filterName.toLowerCase().replace(' ', '-'); //// console.log('Filtername==>'+filterName);
                                    //console.log('ValueData ==>>', filterTitle);
                                    var thisVal = vol.value;// console.log('thisVal == >  ' + thisVal);
                                    // var filterVal = '&restrictBy[' + filterName + ']=' + toString(vol.value);
                                    if(vol.selected != undefined && vol.selected != '' && vol.selected == 'true'){
                                      var selected = 'selected=selected';
                                      var checked = 'checked=checked';
                                          checkVal = thisVal;                          
                                    }
                                    selectOption += '<li class="input-group ' + show +' '+ disableItem + '"><input type="checkbox" ' + checked +' id="'+filterId+'_'+encodeURIComponent(thisVal)+'-filter" value="' + thisVal + '" class="visually-hidden"/> <label for="'+filterId+'_'+encodeURIComponent(thisVal)+'-filter">'+ thisVal +'</label></li>';
                                    
                                    //<li class="input-group"> data-opt-val="' + encodeURIComponent(thisVal) + '"' + selected + '  data-value="' + filterVal + '">' + thisVal + '</li>';
                                    counter++;                        
                                }
                            }                       
                      } else {
                        $.each(filterVal, function(key, val){
                   //console.log('initiall')
                   //console.log('Keyyyy', key);
                      var disableItem = '';
                    if(val.count >= 0){
                      if(val.count == 0){
                          disableItem = 'toDisabled';
                        }
                        var show = 'toShow';
                        filterName=filterName.toLowerCase().replace(' ', '-'); //// console.log('Filtername==>'+filterName);
                        //console.log('ValueData ==>>', filterTitle);
                        var thisVal = val.value;// console.log('thisVal == >  ' + thisVal);
                        if(val.value.indexOf(':') > -1) {
                          if(filterTitle == 'CARAT WGT(CTS.)'){
                            let splitVal = val.value.split(' ');
                            var thisValContent =  splitVal[0]+'-'+splitVal.slice(-1)[0];
                          }else {
                            var thisValContent = val.value.split(':')[1];  
                          }                          
                        }else {
                          if(filterTitle == 'CARAT WGT(CTS.)'){
                            let splitVal = val.value.split(' ');
                            var thisValContent =  splitVal[0]+'-'+splitVal.slice(-1)[0];
                          }else {
                            var thisValContent = val.value;//// console.log('thisVal == >  ' + thisVal);
                          }
                          
                        }                       

                        var filterVal = '&restrictBy[' + filterName + ']=' + val.value;
                        if(val.selected != undefined && val.selected != '' && val.selected == 'true'){
                          var selected = 'selected=selected';
                          var checked = 'checked=checked';
                          	  checkVal = thisVal;                          
                        }
                        selectOption += '<li class="input-group ' + show +' '+ disableItem + '"><input type="checkbox" ' + checked +' id="'+filterId+'_'+encodeURIComponent(thisVal)+'-filter" value="' + thisVal + '" class="visually-hidden"/> <label for="'+filterId+'_'+encodeURIComponent(thisVal)+'-filter">'+ thisValContent +'</label></li>';
                        
                        //<li class="input-group"> data-opt-val="' + encodeURIComponent(thisVal) + '"' + selected + '  data-value="' + filterVal + '">' + thisVal + '</li>';
                        counter++;                        
                    }
                  }); 
                      }
                                     
                  selectOption  += '</ul></div>';
                  if(counter >= 1){
                    sidebarHtml+= '<div class="collection-filter-wrapper" data-filter="&restrictBy[' + filterName + ']" data-filter-type="'+ filterName +'" data-id="'+filterId+'">' + selectOption +'</div>';
                  	$('[data-collection-filter-section]').append(sidebarHtml);
                  }
                }   
                
              }
              else {

                console.log('Loose Stone filter Heree');

                if(filterTitle == 'global.ls_cert_Shape'){
              var counter = 0;
                  var selectOptionLabel = '<div class="filter-by-label">Shape <span><a href="/pages/gemstone-cuts" aria-label="Learn more about shapes">Learn More &gt;</a></span></div>'
                  var selectOption = '';	
              	  // var checked = '';
                  var checkVal = '';
                  var fileUrl = 'https://cdn.shopify.com/s/files/1/0575/2681/2840/files/';
                  if(filterTitle == 'global.shape_filter'){
                    filterTitle = 'Shape';
                  }
                  filterId = filterId.replace('global.', '');
                  $.each(filterVal, function(key, val){
                    var disableItem = '';

                    if(val.count >= 0){
                   //console.log('initialfilter22')
                        if(val.count == 0){
                          disableItem = 'toDisabled';
                        }
                        var show = 'toShow';
                        filterName=filterName.toLowerCase().replace(' ', '-'); 
                        var thisVal = val.value;
                        var filterVal = '&restrictBy[' + filterName + ']=' + val.value;
                        if(val.selected != undefined && val.selected != '' && val.selected == 'true'){
                          var selected = 'selected=selected';
                          var checked = 'checked=checked';
                          	  checkVal = thisVal;
                        }
                      selectOption += '<div class="collection_filter_by_shape'+ show +' '+ disableItem +'" data-shape="shape_'+encodeURIComponent(thisVal).toLowerCase()+'">';
                      selectOption += '<input type="checkbox"  id="'+filterId+'_'+encodeURIComponent(thisVal)+'-filter" ' + checked + ' class="visually-hidden" value="' + encodeURIComponent(thisVal) + '">';
                      selectOption += '<label for="'+filterId+'_'+encodeURIComponent(thisVal)+'-filter" class="filter__label">';
                      selectOption += '<img data-src="'+fileUrl+'ld_shape_'+encodeURIComponent(thisVal).toLowerCase()+'.svg" class="lazyload"><span>' + thisVal +'</span></label>';
                      selectOption += '</div>';
                        counter++;                        
                    }
                  
                  });

                  if(counter >= 1){
                    sidebarHtml+= '<div class="collection-filter-wrapper" data-filter="&restrictBy[' + filterName + ']" data-filter-type="shape-filter">' + selectOption +'</div>';
                  	$('[data-collection-filter-section]').prepend(sidebarHtml);
                    $('[data-collection-filter-section]').prepend(selectOptionLabel);
                  }

            }

                if(filterTitle == 'Price') {

              var selectOption = '';
              selectOption += '<div class="ls-filter-wrapper range-filters filter-block-group" data-group="range-slider-group">';
              var minPrice = parseFloat(filterVal[0].from).toFixed(0); console.log('minPrice', theme.Currency.formatMoney(minPrice*100, theme.moneyFormat).replace('.00',''));
              var highestPrice = parseFloat(filterVal[0].to).toFixed(0); console.log('highestPrice', highestPrice);
              var selectedMinPrice = parseFloat(filterVal[0].left).toFixed(0); console.log('selectedMinPrice',selectedMinPrice);
              var SelectedHighestPrice = parseFloat(filterVal[0].right).toFixed(0); console.log('SelectedHighestPrice', SelectedHighestPrice);
              if(filterVal[0].selected != undefined && filterVal[0].selected != '' && filterVal[0].selected == 'true'){
                var checked = 'checked=checked';
              }


              selectOption += '<div class="filter-total-price collection-filter-wrapper" data-filter="&amp;restrictBy[price]" data-filter-type="price" data-id="'+filterId+'">';
              selectOption +=  '<div class="filter-group-header"><span>Price (SGD)</span><span><a href="#" aria-label="">Learn more</a></span></div>';
              selectOption +=  '<div class="filter-group-content">';
                selectOption += '<div class="slider-range-selected"><span id="collection-price-min-selected"></span><span id="collection-price-max-selected"></span></div>'

              selectOption+='<span id="collection-price-min" data-price=""></span><div id="slider-range"></div> <span id="collection-price-max"  data-price=""></span>';
              selectOption+='<input ' + checked + ' type="checkbox" data-opt-val="&restrictBy[price]=' + theme.Currency.formatMoney(minPrice*100, theme.moneyFormat).replace('.00','') + ','+ theme.Currency.formatMoney(highestPrice*100, theme.moneyFormat).replace('.00','') +'" value="' + theme.Currency.formatMoney(minPrice*100, theme.moneyFormat).replace('.00','') + '-'+ theme.Currency.formatMoney(highestPrice*100, theme.moneyFormat).replace('.00','') +'" id="price-val-range" class="visually-hidden" />';  
              
              
              // selectOption+= '<div class="collection-content-area-left-content price__filter" style="max-width: 280px;"><div class="collection-content-area-left-content-wrapper"><div class="collection-other-list">' + selectOption +'</div></div></div>';
              selectOption += '</div> </div></div>';
              selectOption += '</div>';; 
              if(minPrice != highestPrice){ 
                // $('.collection-filters').append(sidebarHtml);
                $('[data-collection-filter-section] [data-position="1"]').append(selectOption); 
              };
              if($('#slider-range .ui-slider-range').length <= 0){
                initializingPriceSlider(minPrice, highestPrice, selectedMinPrice, SelectedHighestPrice);
              }  
            }

            // Total Caret Weight Filter
            if(filterTitle == 'global.ls_cert_stn_wgt_crt') {
              var selectOption = '';

              console.log('cert_Stn_wgtfilterVal==> ', filterVal);
              min = Math.min.apply(null, filterVal.map(function(item) {
                return item.value;
              })),
              max = Math.max.apply(null, filterVal.map(function(item) {
                return item.value;
              }));

            console.log('min', min);//50
            console.log('max', max);//1000



              selectOption += '<div class="ls-filter-wrapper range-filters filter-block-group" data-group="range-slider-group">';
              var minVal = parseFloat(min); //console.log('minPrice', theme.Currency.formatMoney(minPrice*100, theme.moneyFormat).replace('.00',''));
              var maxVal = parseFloat(max); //console.log('highestPrice', highestPrice);
              var selectedMinVal = parseFloat(min); //console.log('selectedMinPrice',selectedMinPrice);
              var selectedMaxVal = parseFloat(max); //console.log('SelectedHighestPrice', SelectedHighestPrice);
              if(filterVal[0].selected != undefined && filterVal[0].selected != '' && filterVal[0].selected == 'true'){
                var checked = 'checked=checked';
              }


              selectOption += '<div class="filter-total-weight collection-filter-wrapper" data-filter="&amp;restrictBy[filter_metafield_216755d73301b7dbf39d68e2cf6ffbee]" data-filter-type="common-range" data-id="'+filterId+'">';
              selectOption +=  '<div class="filter-group-header"><span>Total Weight</span><span><a href="#" aria-label="">Learn more</a></span></div>';
              selectOption +=  '<div class="filter-group-content">';
                selectOption += '<div class="slider-range-selected"><span id="collection-val-min-selected" data-collection-val-min-selected></span><span id="collection-val-max-selected" data-collection-val-max-selected></span></div>'

              selectOption+='<span id="collection-val-min" data-collection-val-min data-value="' + minVal + '">' + minVal + '</span><div data-common-slider-range id="slider-range_'+filterTitle.split('global.')[1]+'"></div> <span id="collection-val-max" data-collection-val-max  data-value="' + maxVal + '">' + maxVal + '</span>';
              selectOption+='<input type="checkbox" data-opt-val="" value="' + minVal + '-'+ maxVal +'" id="ls_cert_stn_wgt_crt-val-range" data-common-val-range class="visually-hidden" />';  
              
              
              // selectOption+= '<div class="collection-content-area-left-content price__filter" style="max-width: 280px;"><div class="collection-content-area-left-content-wrapper"><div class="collection-other-list">' + selectOption +'</div></div></div>';
              selectOption += '</div> </div></div>';
              selectOption += '</div>';; 
              if(minVal != maxVal){ 
                // $('.collection-filters').append(sidebarHtml);
                $('[data-collection-filter-section] [data-position="1"]').append(selectOption); 
              };
              var counter = 0;
              var selectInputs = ''

              // Hidden checkbox values for custom range slider
              selectInputs += '<ul class="filter-dd collection-filter-wrapper" data-filter="&restrictBy['+filterName+']" data-ref="'+ filterId +'">'
              $.each(filterVal, function(key, val){
                   //console.log('initiall')
                      var disableItem = '';
                    if(val.count >= 0){
                      if(val.count == 0){
                          disableItem = 'toDisabled';
                        }
                        var show = 'toShow';
                        filterName=filterName.toLowerCase().replace(' ', '-'); //// console.log('Filtername==>'+filterName);
                        var thisVal = val.value;//// console.log('thisVal == >  ' + thisVal);
                        if(val.value.indexOf(':') > -1) {
                          var thisValContent = val.value.split(':')[1];  
                        }else {
                          var thisValContent = val.value;//// console.log('thisVal == >  ' + thisVal);
                        }                       

                        var filterVal = '&restrictBy[' + filterName + ']=' + val.value;
                        if(val.selected != undefined && val.selected != '' && val.selected == 'true'){
                          var selected = 'selected=selected';
                          var checked = 'checked=checked';
                          	  checkVal = thisVal;                          
                        }
                        selectInputs += '<li class="input-group ' + show +' '+ disableItem + '"><input type="checkbox" ' + checked +' id="'+filterId+'_'+encodeURIComponent(thisVal)+'-filter" value="' + thisVal + '" class="visually-hidden"/> <label for="'+filterId+'_'+encodeURIComponent(thisValContent)+'-filter">'+ thisValContent +'</label></li>';
                        counter++;                        
                    }
                  }); 
                  selectInputs  += '</ul>';
                  if(counter >= 1){
                    sidebarHtml+= selectInputs;
                      $('[data-collection-filter-section] [data-position="1"]').append(sidebarHtml);
                  }


              console.log(minVal +'<==>'+maxVal +'<==>'+ selectedMinVal +'<==>'+ selectedMaxVal);
              if($('[data-common-slider-range] .ui-slider-range').length <= 0){
                initializingRangeSlider(minVal, maxVal, selectedMinVal, selectedMaxVal, filterId);
              }
            }

            // Depth and table Filter Range slider
            if(filterTitle == 'global.ls_cert_Depth' || filterTitle == 'global.ls_cert_Table' || filterTitle == 'global.ls_cert_Ratio' || filterTitle == 'global.ls_cert_Culet' || filterTitle == 'global.ls_cert_Pavil_Width' || filterTitle == 'global.ls_cert_Stars_Width' || filterTitle == 'global.ls_cert_PvlnH_perc' || filterTitle == 'global.ls_cert_pvln_Agl' || filterTitle == 'global.ls_cert_Grdlavg_perc' || filterTitle == 'global.ls_cert_Girdlemax' || filterTitle == 'global.ls_cert_Girdlemin' || filterTitle == 'global.ls_cert_Girdle' || filterTitle == 'global.ls_cert_Crw_Hgtperc' || filterTitle == 'global.ls_cert_Crw_Agl_deg' || filterTitle == 'global.ls_cert_height_perc' || filterTitle == 'global.ls_cert_height_mm' || filterTitle == 'global.ls_cert_Diamtrs_avg' || filterTitle == 'global.ls_cert_Diamtrs_max' || filterTitle == 'global.ls_cert_Diamtrs_min' ) {
console.log('Enter in Depth and Table filter ')
              var selectOption = '';
              if(filterTitle == 'global.ls_cert_Depth'){
                filterTitle = 'Depth %';
              }
              if(filterTitle == 'global.ls_cert_Table'){
                filterTitle = 'Table %';
              }
              if(filterTitle == 'global.ls_cert_Ratio'){
                filterTitle = 'L/W Ratio %';
              }
              if(filterTitle == 'global.ls_cert_Culet'){
                filterTitle = 'Culet';
              }
              if(filterTitle == 'global.ls_cert_Pavil_Width'){
                filterTitle = 'Pavil Width';
              }
              if(filterTitle == 'global.ls_cert_Stars_Width'){
                filterTitle = 'Stars Width';
              }
              if(filterTitle == 'global.ls_cert_PvlnH_perc'){
                filterTitle = 'Cert Pavilion Height';
              }
              if(filterTitle == 'global.ls_cert_pvln_Agl') {
                filterTitle = 'Pavilion Angle';
              }
              if(filterTitle == 'global.ls_cert_Grdlavg_perc'){
                filterTitle = 'Girdle Avg';
              }
              if(filterTitle == 'global.ls_cert_Girdlemax') {
                filterTitle = 'Gridle Max';
              }
              if(filterTitle == 'global.ls_cert_Girdlemin') {
                filterTitle = 'Gridle Min';
              }
              if(filterTitle == 'global.ls_cert_Girdle') {
                filterTitle = 'Gridle';
              }
              if(filterTitle == 'global.ls_cert_Crw_Hgtperc') {
                filterTitle = 'Crown Height %';
              }
              if(filterTitle == 'global.ls_cert_Crw_Agl_deg') {
                filterTitle = 'Crown Angle deg';
              }
              if(filterTitle == 'global.ls_cert_height_perc') {
                filterTitle = 'Height (%)';
              }
              if(filterTitle == 'global.ls_cert_height_mm') {
                filterTitle = 'Height (mm)';
              }
              if(filterTitle == 'global.ls_cert_Diamtrs_avg') {
                filterTitle = 'Diameter Avg';
              }
              if(filterTitle == 'global.ls_cert_Diamtrs_max') {
                filterTitle = 'Diameter Max';
              }
              if(filterTitle == 'global.ls_cert_Diamtrs_min') {
                filterTitle = 'Diameter Min';
              }


              console.log('cert_Depth/Table Val==> ', filterVal);
              min = Math.min.apply(null, filterVal.map(function(item) {
                return item.value;
              })),
              max = Math.max.apply(null, filterVal.map(function(item) {
                return item.value;
              }));

            console.log('min', min);//50
            console.log('max', max);//1000



              selectOption += '<div class="ls-filter-wrapper range-filters filter-block-group" data-group="range-slider-group">';
              var minVal = parseFloat(min); //console.log('minPrice', theme.Currency.formatMoney(minPrice*100, theme.moneyFormat).replace('.00',''));
              var maxVal = parseFloat(max); //console.log('highestPrice', highestPrice);
              var selectedMinVal = parseFloat(min); //console.log('selectedMinPrice',selectedMinPrice);
              var selectedMaxVal = parseFloat(max); //console.log('SelectedHighestPrice', SelectedHighestPrice);
              if(filterVal[0].selected != undefined && filterVal[0].selected != '' && filterVal[0].selected == 'true'){
                var checked = 'checked=checked';
              }


              selectOption += '<div class="filter-total-weight collection-filter-wrapper" data-filter="&amp;restrictBy['+filterName+']" data-filter-type="common-range" data-id="'+filterId+'">';
              selectOption +=  '<div class="filter-group-header"><span>'+filterTitle+'</span><span><a href="#" aria-label="">Learn more</a></span><span class="filter-toggle-btn enable-filter" data-filter-toggle></span></div>';
              selectOption +=  '<div class="filter-group-content">';
                selectOption += '<div class="slider-range-selected"><span id="collection-val-min-selected_'+filterId.split('global.')[1]+'" data-collection-val-min-selected></span><span id="collection-val-max-selected_'+filterId.split('global.')[1]+'" data-collection-val-max-selected></span></div>'

              selectOption+='<span id="collection-val-min_'+filterId.split('global.')[1]+'" data-collection-val-min data-value="' + minVal + '">' + minVal + '</span><div data-common-slider-range id="slider-range_'+filterId.split('global.')[1]+'"></div> <span id="collection-val-max_'+filterId.split('global.')[1]+'" data-collection-val-max  data-value="' + maxVal + '">' + maxVal + '</span>';
              selectOption+='<input type="checkbox" data-opt-val="" value="' + minVal + '-'+ maxVal +'" id="'+filterId.split('global.')[1]+'-val-range" data-common-val-range class="visually-hidden" />';  
              
              
              // selectOption+= '<div class="collection-content-area-left-content price__filter" style="max-width: 280px;"><div class="collection-content-area-left-content-wrapper"><div class="collection-other-list">' + selectOption +'</div></div></div>';
              selectOption += '</div> </div></div>';
              selectOption += '</div>';; 
              if(minVal != maxVal){ 
                // $('.collection-filters').append(sidebarHtml);
                $('[data-collection-filter-section] [data-position="4"]').append(selectOption); 
              };
              var counter = 0;
              var selectInputs = ''

              // Hidden checkbox values for custom range slider
              selectInputs += '<ul class="filter-dd collection-filter-wrapper" data-filter="&restrictBy['+filterName+']" data-ref="'+ filterId +'">'
              $.each(filterVal, function(key, val){
                   //console.log('initiall')
                      var disableItem = '';
                    if(val.count >= 0){
                      if(val.count == 0){
                          disableItem = 'toDisabled';
                        }
                        var show = 'toShow';
                        filterName=filterName.toLowerCase().replace(' ', '-'); //// console.log('Filtername==>'+filterName);
                        var thisVal = val.value;//// console.log('thisVal == >  ' + thisVal);
                        if(val.value.indexOf(':') > -1) {
                          var thisValContent = val.value.split(':')[1];  
                        }else {
                          var thisValContent = val.value;//// console.log('thisVal == >  ' + thisVal);
                        }                       

                        var filterVal = '&restrictBy[' + filterName + ']=' + val.value;
                        if(val.selected != undefined && val.selected != '' && val.selected == 'true'){
                          var selected = 'selected=selected';
                          var checked = 'checked=checked';
                          	  checkVal = thisVal;                          
                        }
                        selectInputs += '<li class="input-group ' + show +' '+ disableItem + '"><input type="checkbox" ' + checked +' id="'+filterId+'_'+encodeURIComponent(thisVal)+'-filter" value="' + thisVal + '" class="visually-hidden"/> <label for="'+filterId+'_'+encodeURIComponent(thisValContent)+'-filter">'+ thisValContent +'</label></li>';
                        counter++;                        
                    }
                  }); 
                  selectInputs  += '</ul>';
                  if(counter >= 1){
                    sidebarHtml+= selectInputs;
                      $('[data-collection-filter-section] [data-position="1"]').append(sidebarHtml);
                  }


              console.log(minVal +'<==>'+maxVal +'<==>'+ selectedMinVal +'<==>'+ selectedMaxVal+'<<==>>'+filterId);
              if($('.collection-filter-wrapper[data-id="'+filterId+'"] [data-common-slider-range] .ui-slider-range').length <= 0){
                initializingRangeSlider(minVal, maxVal, selectedMinVal, selectedMaxVal, filterId);
              }
            }


            if(filterTitle == 'global.ls_cert_color' || filterTitle == 'global.ls_cert_clarity') {
              let filterRef = filterTitle.split('.')[1];
              if(filterTitle == 'global.ls_cert_color'){
                filterTitle = 'Color';
              }
              if(filterTitle == 'global.ls_cert_clarity'){
                filterTitle = 'Clarity';
              }
              

              console.log('ls-color filter exist ')
              var counter = 0;
              var selectOption = '';
              
              selectOption += '<div class="" data-filter="&amp;restrictBy['+filterName+']" data-filter-type="ls_cert_color" data-id="'+filterId+'">';
              selectOption +=  '<div class="filter-group-header"><span>'+ filterTitle +'</span><span><a href="/pages/diamond2-buying-guide/#'+filterRef+'" target="_blank" aria-label="'+filterTitle+'">Learn more</a></span></div>';
              selectOption +=  '<div class="filter-group-content">';

                selectOption += '<ul class="filter-dd">'
                    $.each(filterVal, function(key, val){
                   console.log('LSS - initiall')
                   console.log(key);
                   console.log(val);
                      var disableItem = '';
                    if(val.count >= 0){
                      if(val.count == 0){
                          disableItem = 'toDisabled';
                        }
                        var show = 'toShow';
                        filterName=filterName.toLowerCase().replace(' ', '-'); //// console.log('Filtername==>'+filterName);
                        var thisVal = val.value;//// console.log('thisVal == >  ' + thisVal);
                        if(val.value.indexOf(':') > -1) {
                          var thisValContent = val.value.split(':')[1];  
                        }else {
                          var thisValContent = val.value;//// console.log('thisVal == >  ' + thisVal);
                        }                       

                        var filterVal = '&restrictBy[' + filterName + ']=' + val.value;
                        if(val.selected != undefined && val.selected != '' && val.selected == 'true'){
                          var selected = 'selected=selected';
                          var checked = 'checked=checked';
                          	  checkVal = thisVal;                          
                        }
                        selectOption += '<li class="input-group ' + show +' '+ disableItem + '"><input type="checkbox" ' + checked +' id="'+filterId+'_'+encodeURIComponent(thisVal)+'-filter" value="' + thisVal + '" class="visually-hidden"/> <label for="'+filterId+'_'+encodeURIComponent(thisVal)+'-filter">'+ thisValContent +'</label></li>';
                        
                        //<li class="input-group"> data-opt-val="' + encodeURIComponent(thisVal) + '"' + selected + '  data-value="' + filterVal + '">' + thisVal + '</li>';
                        counter++;                        
                    }
                  });                  
                  selectOption  += '</ul></div>';
                  selectOption +=  '</div">';
              selectOption +=  '</div">';
                  if(counter >= 1){
                    sidebarHtml+= '<div class="collection-filter-wrapper" data-filter="&restrictBy[' + filterName + ']" data-filter-type="'+ filterName +'" data-id="'+filterId+'">' + selectOption +'</div>';
                    //console.log(sidebarHtml);
                  	$('[data-collection-filter-section] [data-position="2"]').append(sidebarHtml);
                  }

            }

            if(filterTitle == 'global.ls_cert_Polish' || filterTitle == 'global.ls_cert_Symmetry' || filterTitle == 'global.ls_cert_Fluorescence')  {

              console.log('CUt, Polish, Symmetry, Fluoresence filers')
              let filterRef = filterTitle.split('.')[1];

              if(filterTitle == 'global.ls_cert_Polish'){
                filterTitle = 'Polish';
              }
              if(filterTitle == 'global.ls_cert_Symmetry'){
                filterTitle = 'Symmetry';
              }
              if(filterTitle == 'global.ls_cert_Fluorescence'){
                filterTitle = 'Fluorescence';
              }
              
              var counter = 0;
              var selectOption = '';

              selectOption += '<div class="" data-filter="&amp;restrictBy['+filterName+']" data-filter-type="ls_cert_color" data-id="'+filterId+'" data-group="list-group">';
              selectOption +=  '<div class="filter-group-header"><span>'+ filterTitle +'</span><span><a href="#'+filterRef+'" aria-label="'+filterTitle+'">Learn more</a></span><span class="filter-toggle-btn enable-filter" data-filter-toggle></span></div>';
              selectOption +=  '<div class="filter-group-content">';

                selectOption += '<ul class="filter-dd">'
                    $.each(filterVal, function(key, val){
                 // console.log('LSS - initiall')
                  //console.log(key);
                  //console.log(val);
                      var disableItem = '';
                    if(val.count >= 0){
                      if(val.count == 0){
                          disableItem = 'toDisabled';
                        }
                        var show = 'toShow';
                        filterName=filterName.toLowerCase().replace(' ', '-'); //// console.log('Filtername==>'+filterName);
                        var thisVal = val.value;//// console.log('thisVal == >  ' + thisVal);
                        if(val.value.indexOf(':') > -1) {
                          var thisValContent = val.value.split(':')[1];  
                        }else {
                          var thisValContent = val.value;//// console.log('thisVal == >  ' + thisVal);
                        }                       

                        var filterVal = '&restrictBy[' + filterName + ']=' + val.value;
                        if(val.selected != undefined && val.selected != '' && val.selected == 'true'){
                          var selected = 'selected=selected';
                          var checked = 'checked=checked';
                              checkVal = thisVal;                          
                        }
                        selectOption += '<li class="input-group ' + show +' '+ disableItem + '"><input type="checkbox" ' + checked +' id="'+filterId+'_'+encodeURIComponent(thisVal)+'-filter" value="' + thisVal + '" class="visually-hidden"/> <label for="'+filterId+'_'+encodeURIComponent(thisVal)+'-filter">'+ thisValContent +'</label></li>';
                        
                        //<li class="input-group"> data-opt-val="' + encodeURIComponent(thisVal) + '"' + selected + '  data-value="' + filterVal + '">' + thisVal + '</li>';
                        counter++;                        
                    }
                  });                  
                  selectOption  += '</ul></div>';
                  selectOption +=  '</div">';
              selectOption +=  '</div">';
                  if(counter >= 1){
                    sidebarHtml+= '<div class="collection-filter-wrapper" data-filter="&restrictBy[' + filterName + ']" data-filter-type="'+ filterName +'" data-id="'+filterId+'">' + selectOption +'</div>';
                   // console.log(sidebarHtml);
                    $('[data-collection-filter-section] [data-position="3"]').append(sidebarHtml);
                  }

              }



              if(filterTitle == 'global.ls_cert_IGI_totalcutgrade' || filterTitle == 'global.ls_cert_hrdSym_totalcutgrade' || filterTitle == 'global.ls_cert_hrdtotalcutgrade' || filterTitle == 'global.ls_cert_GIASYM' || filterTitle == 'global.ls_cert_GIA2005totalcutgrade') {

console.log('CUt, Polish, Symmetry, Fluoresence filers')
let filterRef = filterTitle.split('.')[1];

if(filterTitle == 'global.ls_cert_IGI_totalcutgrade'){
  filterTitle = 'IGI.totalcutgrade';
}
if(filterTitle == 'global.ls_cert_hrdSym_totalcutgrade'){
  filterTitle = 'HrdSym.totalcutgrade';
}
if(filterTitle == 'global.ls_cert_hrdtotalcutgrade'){
  filterTitle = 'Hrdtotalcutgrade';
}
if(filterTitle == 'global.ls_cert_GIASYM'){
  filterTitle = 'GIASYM';
}
if(filterTitle == 'global.ls_cert_GIA2005totalcutgrade'){
  filterTitle = 'GIA2005totalcutgrade';
}

var counter = 0;
var selectOption = '';

selectOption += '<div class="" data-filter="&amp;restrictBy['+filterName+']" data-filter-type="ls_cert_color" data-id="'+filterId+'" data-group="list-group ">';
selectOption +=  '<div class="filter-group-header"><span>'+ filterTitle +'</span><span><a href="#'+filterRef+'" aria-label="'+filterTitle+'">Learn more</a></span><span class="filter-toggle-btn enable-filter" data-filter-toggle=""></span></div>';
selectOption +=  '<div class="filter-group-content">';

  selectOption += '<ul class="filter-dd">'
      $.each(filterVal, function(key, val){
   // console.log('LSS - initiall')
    //console.log(key);
    //console.log(val);
        var disableItem = '';
      if(val.count >= 0){
        if(val.count == 0){
            disableItem = 'toDisabled';
          }
          var show = 'toShow';
          filterName=filterName.toLowerCase().replace(' ', '-'); //// console.log('Filtername==>'+filterName);
          var thisVal = val.value;//// console.log('thisVal == >  ' + thisVal);
          if(val.value.indexOf(':') > -1) {
            var thisValContent = val.value.split(':')[1];  
          }else {
            var thisValContent = val.value;//// console.log('thisVal == >  ' + thisVal);
          }                       

          var filterVal = '&restrictBy[' + filterName + ']=' + val.value;
          if(val.selected != undefined && val.selected != '' && val.selected == 'true'){
            var selected = 'selected=selected';
            var checked = 'checked=checked';
                checkVal = thisVal;                          
          }
          selectOption += '<li class="input-group ' + show +' '+ disableItem + '"><input type="checkbox" ' + checked +' id="'+filterId+'_'+encodeURIComponent(thisVal)+'-filter" value="' + thisVal + '" class="visually-hidden"/> <label for="'+filterId+'_'+encodeURIComponent(thisVal)+'-filter">'+ thisValContent +'</label></li>';
          
          //<li class="input-group"> data-opt-val="' + encodeURIComponent(thisVal) + '"' + selected + '  data-value="' + filterVal + '">' + thisVal + '</li>';
          counter++;                        
      }
    });                  
    selectOption  += '</ul></div>';
    selectOption +=  '</div">';
selectOption +=  '</div">';
    if(counter >= 1){
      sidebarHtml+= '<div class="collection-filter-wrapper" data-filter="&restrictBy[' + filterName + ']" data-filter-type="'+ filterName +'" data-id="'+filterId+'">' + selectOption +'</div>';
     // console.log(sidebarHtml);
      $('[data-collection-filter-section] [data-position="5"]').append(sidebarHtml);
    }

}



              }
          });

          //Show open the selected filters
          var totSelectedFilters = 0;
          $('[data-collection-filter-section] .collection-filter-wrapper').each(function(){
            var selectedFils = $(this).find('input:checked').length; //('selectedFils==>' + selectedFils)
            if(selectedFils > 0){
              // $(this).prev('.collection-content-area-left-heading').find('span').attr('class', 'expend');
              // $(this).css('display', 'block');
              totSelectedFilters++;
            }
          });
          if(totSelectedFilters > 0){
            // $('.resetFilters').css('display', 'inline-block');
          }else{
            // $('.resetFilters').css('display', 'none');
          }
      }


      function updateFilters(filters){
        $.each(filters, function(k, v){ 
          var filterName = v.attribute;
            var filterTitle = v.title;
            var filterId = filterTitle.toLowerCase().replace(' ', '-');
            var filterVal = v.buckets;
            var sidebarHtml = '';
            if(filterTitle == 'Price') {
              var selectOption = '';
              var minPrice = parseFloat(filterVal[0].from).toFixed(0); console.log('minPrice', theme.Currency.formatMoney(minPrice*100, theme.moneyFormat).replace('.00',''));
              var highestPrice = parseFloat(filterVal[0].to).toFixed(0); console.log('highestPrice', highestPrice);
              var selectedMinPrice = parseFloat(filterVal[0].left).toFixed(0); console.log('selectedMinPrice',selectedMinPrice);
              var SelectedHighestPrice = parseFloat(filterVal[0].right).toFixed(0); console.log('SelectedHighestPrice', SelectedHighestPrice);              
                initializingPriceSlider(minPrice, highestPrice, selectedMinPrice, SelectedHighestPrice);
              
            } else if(filterTitle == 'global.ls_cert_stn_wgt_crt'){
              var selectOption = '';
              var minVal = filterVal[0]; console.log('minVal', minVal);
              var maxVal = filterVal[0]; console.log('maxVal', maxVal);
              var selectedMinVal = filterVal[0]; console.log('selectedMinVal',selectedMinVal);
              var SelectedMaxVal = filterVal[0]; //console.log('SelectedHighestVal', SelectedHighestVal);              
              //initializingRangeSlider(minVal, maxVal, selectedMinVal, SelectedMaxVal, 'filter_metafield_216755d73301b7dbf39d68e2cf6ffbee');
            } else {
          var filterVal = v.buckets;
          $.each(filterVal, function(key, val){
           //console.log(val);
                    if(val.count >= 0){
                      if(val.count == 0){
                        //  ('onupdateFilterEach=========')
                        // console.log(val.value);
                        $(document).find('input[value="'+val.value+'"]').closest('.input-group').removeClass('toShow').addClass('toDisabled')
                          // disableItem = 'toDisabled';
                        } else {
                          $(document).find('input[value="'+val.value+'"]').closest('.input-group').removeClass('toDisabled').addClass('toShow')
                        }
                        // var show = 'toShow';                       
                                                
                    }
                  });
            } 

        })
      }

     
      // Filter on Select event
     function filterOnSelect(){ 
        // $('.dynamic-loadmore-btn-box').show();
        var currentPage = Number($('.dynamic-pagination span a.active').text());
          
          
          if(currentPage > 1) {
            currentPage = currentPage-1; // console.log(currentPage);
            var Startitems = maxResults*currentPage;// console.log("startItems==>>" + Startitems);      
          } else {
            var Startitems = 0;
          }
      

        searchsortby = $(document).find("#sortByFilter option:selected").attr('value');
        var activeFilter = '';
        var fil = $('[data-collection-filter-section] input[type="checkbox"]:checked');  console.log('fil==>' + fil);  console.log(fil);
        if(fil.length > 0) {
          $.each(fil, function(i, v){
            var priceValue = '';
            var minPriceValue = '';
            var maxPriceValue = '';
            var FinalpriceValue = '';
            var rangeValue = '';
            var minVal = '';
            var maxVal ='';
            var FinalValue = '';

         //console.log('iiii', i);
         console.log('VId-------------', v.id);
         //console.log('VValue',v.value);
         //console.log('VVVVV',v);
            if(v.id == 'price-val-range') {
              priceValue = v.value.split('[price]=')[1];
              minPriceValue =  priceValue.split(',')[0];
              maxPriceValue =  priceValue.split(',')[1];
              minPriceValue = parseInt(minPriceValue)*100;
              maxPriceValue = parseInt(maxPriceValue)*100;
              FinalpriceValue = theme.Currency.formatMoney(minPriceValue, theme.moneyFormat).replace('.00','') +', '+ theme.Currency.formatMoney(maxPriceValue, theme.moneyFormat).replace('.00','');
              activeFilter += '<button data-clear-filter="" class="active-filter ere" data-value="'+v.value+'" data-key="'+v.id+'" aria-label="Clear '+v.value+' filter">'+FinalpriceValue+'<span class="clear-filter" aria-hidden="true"><img src="https://cdn.shopify.com/s/files/1/0575/2681/2840/files/close-brown.svg?v=1638208068" alt="Close Filter" /></span></button>';              
            } 
            // else if( v.id == 'ls_cert_stn_wgt_crt-val-range'){
            //   console.log('VVVVVVVVVVVVVVV==>')
            //   console.log(v.value);
            //   rangeValue = v.value.split('[filter_metafield_216755d73301b7dbf39d68e2cf6ffbee]=')[1];
            //   minVal =  rangeValue.split(',')[0];
            //   maxVal =  rangeValue.split(',')[1];
            //   // minPriceValue = parseInt(minPriceValue)*100;
            //   // maxPriceValue = parseInt(maxPriceValue)*100;
            //   FinalValue = minVal+', '+ maxVal;
            //   activeFilter += '<button data-clear-filter="" class="active-filter ere" data-value="'+v.value+'" data-key="'+v.id+'" aria-label="Clear '+v.value+' filter">'+FinalValue+'<span class="clear-filter" aria-hidden="true"><img src="https://cdn.shopify.com/s/files/1/0575/2681/2840/files/close-brown.svg?v=1638208068" alt="Close Filter" /></span></button>';   
              
            // }
            else {
              activeFilter += '<button data-clear-filter="" class="active-filter ere" data-value="'+v.value+'" data-key="'+v.id+'" aria-label="Clear '+v.value+' filter">'+v.value+'<span class="clear-filter" aria-hidden="true"><img src="https://cdn.shopify.com/s/files/1/0575/2681/2840/files/close-brown.svg?v=1638208068" alt="Close Filter" /></span></button>';
            }
            
          });
          $(document).find('[data-active-filters]').html(activeFilter);
        }
        updateFilters();
        //'&output=jsonp&sortBy='+ searchsortby +'&'+'startIndex='+ Startitems +'&maxResults=' + maxResults + '&items=true&facets=true&facetsShowUnavailableOptions=true&' + defFilterName;
      // var newQueryString = queryString
      var newQueryString = '&output=jsonp&sortBy='+ searchsortby +'&'+'startIndex='+ Startitems +'&maxResults=' + maxResults + '&items=true&facets=true&facetsShowUnavailableOptions=true&' + defFilterName;
      $(document).find('[data-collection-filter-section] .collection-filter-wrapper').each(function(){
        var thisFilterName = $(this).data('filter'); //// console.log('thisFilterName==> ' + thisFilterName);
        var filValues = $(this).find('input[type="checkbox"]:checked');
        var filSelected = '';
        if(filValues.length > 0){
          filValues.each(function(i){ 
            filSelected+=$(this).closest('input[type="checkbox"]:checked ').val();
            if(i+1 < filValues.length){
              filSelected += '|';
            }  
          });
        }
        var selFils = thisFilterName+'='+filSelected;
        if(filSelected!=''){
          newQueryString+=selFils.replace('undefined=', '');          
        } 
      });
      newQueryString+='&maxResults='+maxResults;
   //console.log('==========>>');
   //console.log(newQueryString)
   //console.log('==========>>');
      return newQueryString;
      }

      function createPagination(totalNoOfProducts, startIndex){

          $('.dynamic-pagination').empty();

          var pageperview = 16;

          var totalProducts = totalNoOfProducts;      	
          var noOfPages = totalProducts/pageperview;
          
          if(totalProducts <= pageperview){
            noOfPages = 0;
          }
          var x = Math.floor(noOfPages);
          if(pageperview*x < totalProducts){
            x++;
          }
          Pagination.Init($('.dynamic-pagination')[0], {
              size: x, // pages size
              page: startIndex+1,  // selected page
              step: 3   // pages before and after current
            });
        }
      
      // Print Product 
      function printProducts(prodObj){
     //console.log(prodObj.length);
        $(document).find('[data-col-images-slider-init]').slick("unslick");
        if($('[data-collection-listing-container]').hasClass('inital-load')) {
          $(document).find('[data-collection-listing-container] [data-view="grid"] [data-init-content], .bottom-pagination-row').remove();
          $(document).find('[data-collection-listing-container] [data-view="grid"] [data-list-item], [data-collection-listing-container] .list-view-items tbody').html('');
        }        
        var productGrid = '';
        var productList = '';
        // console.log(prodObj);
        var getcollection = "{{ collection.handle }}";
        $.each(prodObj, function(i) {   
          
            var getprodlink = prodObj[i].link,
                prodLink = prodObj[i].link,
                prodType = prodObj[i].product_type,
                getproductHandle = prodObj[i].link.split('/products/')[1],
                prodQty = prodObj[i].quantity,
                prodTitle = prodObj[i].title,
                prodTags = prodObj[i].tags,                
                prodId = prodObj[i].id;
                if(prodObj[i].hasOwnProperty('shopify_images')){
                 var prodImages = prodObj[i].shopify_images;
                } else {
                  var prodImages = '';
                }

                // console.log('prodImagesssssssss', prodImages);

                getcollectionlink = '/collections/'+getcollection;
                var _thistags = prodTags;
                _thistags = _thistags.split('[:ATTR:]');            
                var _this_variants = prodObj[i].shopify_variants;
                var _variantComparePrice = [];
                var _variantRegularPrice = [];
                var _variant_ComparePrice_Max = '';
                var _variant_ComparePrice_Min = '';
                var _variant_RegularPrice_Max = '';
                var _variant_RegularPrice_Min = '';
                var ItemPrice = '';
                var prodPrice = parseInt(prodObj[i].price)*100;
                // console.log('prodPrice', prodPrice);
                
                    //prodPrice = theme.Currency.formatMoney(prodPrice, theme.moneyFormat).replace('.00',''),                
                var prodComparePrice = parseInt(prodObj[i].list_price)*100;
                //console.log('prodComparePrice', prodComparePrice);
                // return false;
            
                //prodComparePrice = theme.Currency.formatMoney(prodComparePrice, theme.moneyFormat).replace('.00','')
                if($('body').attr('data-template') == 'loose-stone-plp'){ 
                  ItemPrice += '<td class="price_td">'+theme.Currency.formatMoney(prodPrice, theme.moneyFormat).replace('.00','')+'</td>';
                } 
                
                else{
                if(prodComparePrice > prodPrice) {
                  var productDiscount =  prodComparePrice / (prodComparePrice - prodPrice);
                  productDiscount = productDiscount.toFixed(2);
                 // console.log(productDiscount);                  
                  ItemPrice += '<div class="product-price-card-row price_row">';
                  ItemPrice += '<div class="ragular_price">'+theme.Currency.formatMoney(prodPrice, theme.moneyFormat).replace('.00','')+'</div>';
                  ItemPrice += '<div class="compare_at_price">'+theme.Currency.formatMoney(prodComparePrice, theme.moneyFormat).replace('.00','')+'</div>';
                  ItemPrice += '<div class="product_discount">'+productDiscount+'% OFF</div>';
                  ItemPrice += '</div>';
                } else {
                  ItemPrice += '<div class="product-price-card-row price_row">';
                  ItemPrice += '<div class="ragular_price">'+theme.Currency.formatMoney(prodPrice, theme.moneyFormat).replace('.00','')+'</div>';
                  //ItemPrice += '<div class="compare_at_price"></div>';
                  //ItemPrice += '<div class="product_discount"></div>';
                  ItemPrice += '</div>';
                }
              }

            var ldTableContent = '';
            var ldListTableContent = '';
            var ldGridContent = '';
            var ldGridContentMob = '';
            var jwGridTitle = '';
            var jwGridContent = '';


            //  Get All metainfo by ajax API Call
            console.log('MetaInfo before::==>>');
                      var metaInfobyview = '';
                      var itemUrls = prodLink+'/?view=metainfo';
                    //   $.ajax({
                    //     url: itemUrls,
                    //     cache: false,
                    //   success: function(res) {
                      
                    //     jwGridContent += res;
                    //     jwGridContent +='<div class="product_compare">Compare</div>';
                    //     console.log('MetaInfo after::==>>',jwGridContent);
                    //   },
                    //   error: function(XHR, XMLHttpRequest, error){
                    //     console.log(XHR);
                    //   }
                    // });
                   
                    // console.log('MetaInfo after2222::==>>',jwGridContent);


                    

            if($('body').attr('data-template') == 'loose-stone-plp'){ 
             // console.log('inside Loosestone');
              ldGridContent += '<div class="product-price-card-row hide_mobile">';
            $.each(_thistags, function(i){  
             // console.log(_thistags[i]); 
              if(_thistags[i].includes(':')){
                let tagVal = _thistags[i].split(':')[1];            
              if(_thistags[i].includes('LDDEPTH:')){ldTableContent += '<tr><td>Depth:</td><td>'+tagVal+'</td></tr>';}
              if(_thistags[i].includes('LDTABLE:')){ldTableContent += '<tr><td>Table:</td><td>'+tagVal+'</td></tr>';}
              if(_thistags[i].includes('LDFLUORSCENCE:')){ldTableContent += '<tr><td>Fluorescence:</td><td>'+tagVal+'</td></tr>';}
              if(_thistags[i].includes('LDPOLISH:')){ldTableContent += '<tr><td>Polish:</td><td>'+tagVal+'</td></tr>';}
              if(_thistags[i].includes('LDSYMMETRY:')){ldTableContent += '<tr><td>Symmetry:</td><td>'+tagVal+'</td></tr>';}
              if(_thistags[i].includes('LDCLARITY:')){ldTableContent += '<tr><td>CLARITY:</td><td>'+tagVal+'</td></tr>';}
              if(_thistags[i].includes('LDCT:')){ldGridContent += '<div class="product_b_tex">'+tagVal+'</div>';}
              if(_thistags[i].includes('LDSHAPE:')){ldGridContent += '<div class="product_b_tex">'+tagVal+'</div>';}
              if(_thistags[i].includes('LDCOLOR:')){ldGridContent += '<div class="product_b_tex">'+tagVal+'</div>';}

              if(_thistags[i].includes('SHAPE:')){ldListTableContent += '<td class="shape_td"><a href="'+prodLink+'"><img src="//cdn.shopify.com/s/files/1/0575/2681/2840/t/2/assets/list_360.png" alt="360 View" /><span class="text">'+tagVal+'</span>';}
              
              if(_thistags[i].includes('LDCT:')){ldListTableContent += '<td class="care-tdt">'+tagVal+'</td>';}
              if(_thistags[i].includes('LDCOLOR:')){ldListTableContent += '<td class="color_td">'+tagVal+'</td>';}
              if(_thistags[i].includes('LDPOLISH:')){ldListTableContent += '<td class="cut_td">'+tagVal+'</td>';}
              if(_thistags[i].includes('LDCLARITY:')){ldListTableContent += '<td class="clarity_td">'+tagVal+'</td>';}
              }
            })
            ldListTableContent += ItemPrice;
            ldGridContent += '</div>';
            ldGridContentMob += '<div class="product-price-card-row show_mobile">';
              ldGridContentMob += '<div class="r1">';
                $.each(_thistags, function(i){ 
                  if(_thistags[i].indexOf(':') > -1 ){
                  let tagVal = _thistags[i].split(':')[1];  
                if(_thistags[i].includes('LDCT:')){ldGridContentMob += '<div class="product_b_tex">'+tagVal+'</div>';}
                if(_thistags[i].includes('LDSHAPE:')){ldGridContentMob += '<div class="product_b_tex">'+tagVal+'</div>';}
                  } else {
                 //console.log('testfiilllllll');

                  }
                });
              ldGridContentMob += '</div>'
              ldGridContentMob += '<div class="r2">';
                $.each(_thistags, function(i){ 
                  if(_thistags[i].includes(':')){
                  let tagVal = _thistags[i].split(':')[1];  
                if(_thistags[i].includes('LDPOLISH:')){ldGridContentMob += '<div class="product_b_tex">'+tagVal+'</div>';}
                if(_thistags[i].includes('LDCOLOR:')){ldGridContentMob += '<div class="product_b_tex">'+tagVal+'</div>';}
                if(_thistags[i].includes('LDCLARITY:')){ldGridContentMob += '<div class="product_b_tex">'+tagVal+'</div>';}
                  }
                });
              ldGridContentMob += '</div>';            
            ldGridContentMob += '</div>';
          } else {
          //  console.log('inside jewellery');
            jwGridTitle += '<div class="h4 grid-view-item__title product-card__title" aria-hidden="true"><a href="'+ prodLink +'">'+ prodTitle.replace('Diamond2', 'Diamond2<sup>®</sup>')+'</a></div>';
            jwGridContent += '<div class="product-price-card-row abc">';
            //   $.each(_thistags, function(i){ 
            //  ////console.log('INdex==>' + i);
            //  //  console.log(_thistags[i]);
            //     // return false;
            //     if(_thistags[i].includes(':')){
            //     let tagVal = _thistags[i].split(':')[1];  
            //     if(_thistags[i].includes('CTW:')){jwGridContent += '<div class="product_weight">'+tagVal+'</div>';}
            //     if(_thistags[i].includes('DEF:')){jwGridContent += '<div class="product_def">'+tagVal+'</div>';}
            //     }
            //   });

              
              
              jwGridContent +='</div>'
          }
         // console.log('jwGridContent', jwGridContent);
          // return false;
            if(prodQty <= 0 ){
              var prodAvaibility = 'grid-view-item--sold-out';
            }     
            // if(prodImages.length > 1 ){
              var prodImgSlider = 'product_images_slider';
              var prodImgSliderDyn = 'data-col-images-slider-init'
            // }    

            if($('body').attr('data-template') == 'loose-stone-plp'){ 
              productGrid += '<li class="grid__item grid__item--loose-stone-plp-template  bbb" data-handle="'+getproductHandle+'" data-title="'+prodTitle+'" data-type="'+prodType+'">';
              productList += '<tr class="list-view-item">';
            }else {
              productGrid += '<li class="grid__item grid__item--solitaire-collection  aaa" data-handle="'+getproductHandle+'" data-title="'+prodTitle+'" data-type="'+prodType+'">';
            }

            if(prodImages == undefined ){
              var noImage = 'no-image'
            }
            productGrid += '<div class="grid-view-item product-card">';
            productGrid += '<a class="grid-view-item__link grid-view-item__image-container full-width-link" href="'+getprodlink+'" style="display: none;"><span class="visually-hidden">'+prodTitle.replace('Diamond2', 'Diamond2<sup>®</sup>')+'</span></a>';
            productGrid += '<div class="product-images-wrapper '+ noImage +'"><a class="product-full-link" href="'+getprodlink+'"> </a><div class="product-images-wrapper '+prodImgSlider+'" data-col-images-slider '+prodImgSliderDyn+'>';
            // console.log('ProductImageLength', prodImages.length);

               if(prodImages != undefined ){
                for (let j = 0; j < prodImages.length; j++) {
                  if(prodImages[j].indexOf('xyzg') > -1) {
                    productGrid += '<div class="product-card__image-with-placeholder-wrapper product-images-slide" data-image-loading-animation><div id="" class="grid-view-item__image-wrapper product-card__image-wrapper js"><div class="product_img_holder"><img data-src="'+prodImages[j]+'" alt="'+ prodTitle+'" class="grid-view-item__image lazyload"></div></div></div>'
                  }
                }  
             }            
                productGrid += '</div>';
                if($('body').attr('data-template') == 'loose-stone-plp'){ 
                  productGrid += '<div class="ls-item-more-info hide_mobile">';
                  productGrid += '<div class="product-image-body-row">';
                  productGrid += '<a class="compare_btn product_compare">COMPARE</a>';
                  productGrid += '<a class="p_more_btn"><span class="text_more">MORE</span><span class="text_less">LESS</span></a>';
                  productGrid += '</div>';
                  productGrid += '<div class="more_product_datatable" style="display: none;">';
                  productGrid += ' <table><tbody>';
                  productGrid += ldTableContent;
                  productGrid += '</tbody></table>';
                  productGrid += '</div>'
                  productGrid += '</div>';
                  productList += '<td class="wishlist_td"><a href="#"><span class="wishlist-Icon"><svg width="21" height="18" viewBox="0 0 21 18" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M18.9542 3.14027C18.2213 1.69531 16.11 0.513075 13.6542 1.2014C12.4807 1.52703 11.4568 2.22537 10.7499 3.1823C10.0429 2.22537 9.01906 1.52703 7.84555 1.2014C5.38425 0.523584 3.27847 1.69531 2.54555 3.14027C1.51727 5.16321 1.9439 7.43836 3.81448 9.90266C5.28032 11.831 7.37516 13.7857 10.4162 16.0555C10.5123 16.1276 10.6307 16.1667 10.7526 16.1667C10.8745 16.1667 10.9929 16.1276 11.089 16.0555C14.1246 13.7909 16.2249 11.852 17.6907 9.90266C19.5559 7.43836 19.9825 5.16321 18.9542 3.14027Z" fill="white" stroke="currentColor" stroke-width="2"></path>    </svg></span> </a></td>';
                  productList += ldListTableContent;
                  productList += '</tr>';
                }
                productGrid += '</div>'
                productGrid += '<div class="prodct_card_body est">' 
                  if($('body').attr('data-template') != 'loose-stone-plp'){
                     
                  }
                productGrid += jwGridTitle;
                productGrid += '<span style="display: none;"></span>';
                productGrid += '<div class="product-price-card">'
                productGrid += ldGridContent;
                productGrid += ldGridContentMob;

               

                  
                productGrid += jwGridContent;
                productGrid += ItemPrice;
               
                // productGrid += '<div class="product-price-card-row price_row">'
                // productGrid += '<div class="ragular_price">'+ prodPrice +'</div>'
                // productGrid += '</div>'
                productGrid += '</div>'  
                productGrid += '</div>'
                productGrid += '</div>'
                productGrid += '</div>'
                productGrid += '</li>'

                if($('body').attr('data-template') == 'jewellery-plp' && $('body').attr('data-load') == 'jewellery-plp-initial' && i == 3 ){
                  productGrid += $('.capture-metafields-banner .static_image_column_3_layout[data-position="1"]').html();
               //console.log('Yes jewellery-plp template');
                }
                if($('body').attr('data-template') == 'jewellery-plp' && $('body').attr('data-load') == 'jewellery-plp-initial' && i == 9 ){
                  productGrid += $('.capture-metafields-banner .static_image_column_3_layout[data-position="2"]').html();
               //console.log('Yes jewellery-plp template');
                }

                // $('[data-collection-listing-container] [data-view="grid"] [data-list-item]').append(productGrid).removeClass('hide'); 

                function getData(ajaxurl) { 
                    return $.ajax({
                      url: itemUrls,
                      type: 'GET',
                    });
                  };

                  async function renderMetaInfo() {
                    try {
                      const res = await getData(prodLink+'/?view=metainfo')
                      // $(document).find('.product_view_tab[data-view="grid"] li .prodct_card_body').html('');
                      let x  = res;
                      var GridContentupdate = x;
                      $(document).find('.product_view_tab[data-view="grid"] li[data-handle="'+prodLink.split('products/')[1]+'"] .prodct_card_body').html('').html(GridContentupdate);                      
                    } catch(err) {
                      console.log(err);
                    }
                  }
                  renderMetaInfo();

                  function getMoreData(ajaxurl) { 
                    return $.ajax({
                      url: itemUrls,
                      type: 'GET',
                    });
                  };

                  async function renderLSMetaMoreInfo() {
                    try {
                      const response = await getMoreData(prodLink+'/?view=lsmetamoreinfo')
                      // $(document).find('.product_view_tab[data-view="grid"] li .prodct_card_body').html('');
                      let y  = response;
                      var LsGridmoreInfoContent = y;
                      $(document).find('.product_view_tab[data-view="grid"] li[data-handle="'+prodLink.split('products/')[1]+'"] .product-images-wrapper .ls-item-more-info').html('').html(LsGridmoreInfoContent);                      
                    } catch(err) {
                      console.log(err);
                    }
                  }
                  renderLSMetaMoreInfo();
        });
        
            // productGrid += '</ul>';
            
                $('[data-collection-listing-container] [data-view="grid"] [data-list-item]').append(productGrid).removeClass('hide');  
                $('[data-collection-listing-container] .list-view-items tbody').append(productList).removeClass('hide');         
                if($('body').attr('data-template') == 'jewellery-plp' && $('body').attr('data-load') == 'jewellery-plp-initial'){
                  $('body').removeAttr('data-load');
                } 
             
                
                               
                $(document).find('[data-col-images-slider-init]').slick(sliderInit());
      }
      function sliderInit(){               
          return {
          // $(document).find('[data-col-images-slider-init]').slick({
            autoplay: false,
            autoplaySpeed: 500,
            arrows: true,
            slidesToShow: 1,
            slidesToScroll: 1,
            Infinite: false,
            loop: false,
            dots: false
          // });
        }
      };

      // Get product View for metafields information
      
    //   function getMetaInfo(prodHandle){
    //     console.log('MetaInfo==>', prodHandle);
    //     let itemUrls = prodHandle+'/?view=metainfo';
    //     $.ajax({
    //       url: itemUrls,
    //       cache: false,
    //     success: function(itemMetafields) {
    //      var metaInfobyview = itemMetafields
          
    //     },
    //     error: function(XHR, XMLHttpRequest, error){
    //       console.log(XHR);
    //     }
    //   })
    // }      

      //Initialize Price Slider
    	function initializingPriceSlider(minPrice, highestPrice, selectedMin, selectedMax){
       //console.log(minPrice,'--', highestPrice,'--', selectedMin,'--', selectedMax);
          var getMinAmt = minPrice;
          var getMaxAmt = highestPrice;
            $('#price-min-val').val(theme.Currency.formatMoney(minPrice*100, theme.moneyFormat).replace('.00',''));
            $('#price-max-val').val(theme.Currency.formatMoney(highestPrice*100, theme.moneyFormat).replace('.00',''));      	
            $( "#slider-range" ).slider({
            range: true,
            min: parseFloat(minPrice),
            max: parseFloat(highestPrice),
            values: [ selectedMin, selectedMax ],
            slide: function( event, ui ) { 
              $( "#collection-price-min" ).text( theme.Currency.formatMoney(minPrice*100, theme.moneyFormat).replace('.00','')).attr('data-price',minPrice);
              $( "#collection-price-max" ).text( theme.Currency.formatMoney(highestPrice*100, theme.moneyFormat).replace('.00','')).attr('data-price',highestPrice);
              $('[data-filter-type="price"]').find('.slider-range-selected .span').text('');
    			// if(parseFloat(ui.values[ 0 ].toFixed(2)) > parseFloat(minPrice) || parseFloat(ui.values[ 1 ].toFixed(2)) < parseFloat(highestPrice)){
            $('[data-filter-type="price"]').find('.slider-range-selected #collection-price-min-selected').text(theme.Currency.formatMoney(ui.values[ 0 ]*100, theme.moneyFormat).replace('.00',''))
            $('[data-filter-type="price"]').find('.slider-range-selected #collection-price-max-selected').text(theme.Currency.formatMoney(ui.values[ 1 ]*100, theme.moneyFormat).replace('.00',''))
            
            //.append('<i class="selRange">(SGD' + ui.values[ 0 ].toFixed(2) +' - SGD' + ui.values[ 1 ].toFixed(2) + ')</i>');
              priceSelected = '&restrictBy[price]=' + ui.values[ 0 ] + ','+ ui.values[ 1 ];
    			// }    
            },
            stop: function( event, ui ) {
              // $('[data-filter-type="price"]').find('.slider-range-selected .selRange').remove();
              $('#price-val-range').attr('data-opt-val', '&restrictBy[price]=' + ui.values[ 0 ] + ','+ ui.values[ 1 ]).val('&restrictBy[price]=' + ui.values[ 0 ] + ','+ ui.values[ 1 ]).attr('checked', 'checked').change(); 
              // if(parseFloat(selectedMin) > parseFloat(minPrice) || parseFloat(selectedMax) < parseFloat(highestPrice)){
              //   $('[data-filter-type="price"]').find('.slider-range-selected').append('<i class="selRange">(SGD ' + selectedMin +' - SGD ' + selectedMax + ')</i>');
              // } 
              // consol
            }
          });
          $( "#collection-price-min" ).text( theme.Currency.formatMoney(minPrice*100, theme.moneyFormat).replace('.00',''));
          $( "#collection-price-max" ).text( theme.Currency.formatMoney(highestPrice*100, theme.moneyFormat).replace('.00',''));
          

          // if(parseFloat(selectedMin) > parseFloat(minPrice) || parseFloat(selectedMax) < parseFloat(highestPrice)){
          //   $('[data-filter-type="price"]').find('.slider-range-selected').append('<i class="selRange">(SGD ' + selectedMin +' - SGD ' + selectedMax + ')</i>');
          // }      
        }
    	//Initialize Price Slider Ends

      //Initialize common Range Slider
    	function initializingRangeSlider(minVal, maxVal, selectedMinVal, selectedMaxVal, filterId){
       console.log(minVal,'--', maxVal,'--', selectedMinVal,'--', selectedMaxVal);
       console.log('erelkjrlekjrlekjrlekjr', filterId);
          var getMinVal = parseFloat(minVal);
          var getMaxVal = parseFloat(maxVal);
            // $('#price-min-val').val(theme.Currency.formatMoney(minPrice*100, theme.moneyFormat).replace('.00',''));
            // $('#price-max-val').val(theme.Currency.formatMoney(highestPrice*100, theme.moneyFormat).replace('.00','')); 
            let rangeSlider = $('#slider-range_'+filterId.split('global.')[1]+'[data-common-slider-range]');
            
            rangeSlider.slider({
              range: true,
              min: getMinVal,
              max: getMaxVal,
              step: 0.001,
              values: [ getMinVal, getMaxVal ],
              slide: function( event, ui ) {
                console.log(ui);              
                
                //$( "#amount" ).val( "$" + ui.values[ 0 ] + " - $" + ui.values[ 1 ] );
              },
              stop: function(event, ui ) {
                var selectedMin = ui.values[ 0 ];
                var seletedMax = ui.values[ 1 ];
                var getParentEle = $(this).closest('.collection-filter-wrapper').data('id');
                console.log('getParentEle==>>>>', getParentEle);
                filterId =  $(this).closest('.collection-filter-wrapper').data('id');
                selectedCustomRange (selectedMin, seletedMax, filterId);
              }
            });    
        }
    	//Initialize Price Slider Ends

      function selectedCustomRange (selectedMin, selectedMax, filterId) {
        $(document).find('ul.filter-dd[data-ref$="'+filterId+'"] input[type="checkbox"]:checked').prop('checked', false).removeClass('thisChecked');
        console.log("customRange Min", selectedMin);
        console.log("customRange Max", selectedMax);
        console.log("customRange Id", filterId);
        var filterid = filterId.split('global.')[1]
        $(document).find('ul.filter-dd[data-ref$="'+filterId+'"] input[type="checkbox"]').each(function(){
          console.log('ActiveFilterId == >',filterId)
          var  thisInputVal = parseFloat($(this).val());
            console.log('thisInputVal', thisInputVal);
          if(thisInputVal >= selectedMin && thisInputVal <= selectedMax){
            console.log('yoyou');
            
              $(this).prop('checked', true).addClass('thisChecked')//.trigger('change')//.next('label').trigger('click');
              // setTimeout(function(){
              // filterOnSelect();     
              // $(this).next('label').trigger('click');        
            // },500)
            
            // $(this).next('label').trigger('click');
          } else {
            console.log('asdfasdf');
            // $(this).prop('checked', true).addClass('thisChecked').trigger('change')

          }
        }).promise().done(function(){

          console.log('asdfasdf');
          $('[data-collection-listing-container]').addClass('inital-load');    
            var newQueryString = filterOnSelect();     
            searchaniseProducts(newQueryString); 
        })

      }
  });

 
  </script>
