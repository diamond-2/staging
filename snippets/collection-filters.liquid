
<link rel="stylesheet" href="{{'filter-layout.css' | asset_url }}">
<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/jqueryui-touch-punch/0.2.3/jquery.ui.touch-punch.min.js"></script>

<script type="text/javascript">
  $(function(){
    {% include 'createpagination' %}
    var maxResults = 16;
    var defFilterName = 'restrictBy[collections]={{ collection.title | replace: ',' , '\,' | url_encode }}';
      var searchsortby = $(document).find("#sortByFilter option:selected").attr('value'); // console.log('sortyBy==> '+ searchsortby);
      var searchBaseUrl = 'https://www.searchanise.com/getresults?api_key=7r9L5P8L4h';

      var queryString = '&output=jsonp&sortBy='+ searchsortby +'&'+'startIndex=0&maxResults=' + maxResults + '&items=true&facets=true&facetsShowUnavailableOptions=true&' + defFilterName;
      var searchData = '';
    var filters = '';

    // $(document).on('change', '[data-collection-filter-section] select', function(){
    //   // console.log('select changes');
    //   var getSelectedVal = $(this).val(); console.log(getSelectedVal);
    //   $(this).find('option:selected').attr('selected','selected').siblings().removeAttr('selected');
    //   var getId = $(this).attr('id');  console.log(getId);

    //   $(document).find('[data-collection-filter-section] input[id="'+getId+'-filter"]').val(getSelectedVal).attr('checked', 'checked');
    //   $(this).next(':checkbox').trigger('change');
    // });


    $(document).on('click', '.filter-option-name', function(){
      console.log('showDropdown filters');
      $(this).closest('.filters-toolbar__input').toggleClass('open-dd');
      $(this).next('.filter-dd').slideToggle()
      $(this).closest('.collection-filter-wrapper').siblings().find('.filter-dd').slideUp();
      $(this).closest('.collection-filter-wrapper').siblings().find('.filters-toolbar__input').removeClass('open-dd');
    })

    // Clear filter Event
    $(document).on('click', '[data-clear-filter]', function(){
      var getKey = $(this).data('key');
      $(this).remove();
      $(document).find('[data-collection-filter-section] :checkbox:checked[id="'+getKey+'"]').prop('checked', false).trigger('change');
    });

    $('body').on('change','[data-collection-filter-section] input[type="checkbox"]', function(){   
      $('[data-collection-listing-container]').addClass('inital-load');    
      // console.log('input changessssss'); 
      var newQueryString = filterOnSelect();     
      searchaniseProducts(newQueryString);  
    });

    $('body').on('change','#sortByFilter', function(){ 
      var getSelectedVal = $(this).val();
      $(this).find('option:selected').attr('selected','selected').siblings().removeAttr('selected');    
      // console.log('input changess'); 
      var newQueryString = filterOnSelect();     
      //// console.log('New Query Stirng --------------')
      //// console.log(newQueryString); 	
     // // console.log('New Query Stirng --------------')
      searchaniseProducts(newQueryString);  
    });

    // Hide dropdown when clicked outside
    // $(document).click(function(e) {
    //   if( e.target.class != 'collection-filter-wrapper') {
    //     $(".filter-dd").hide();
    //   }
    // });

    function LoadMoreItems() {
      $('.dynamicloadMore-btn').hide();
      $('.dynamic-loader-spiner').show();
    }

    $(document).on('click', '.dynamicloadMore-btn', function(){
      $('[data-collection-listing-container]').removeClass('inital-load');  
      LoadMoreItems();
      $('.dynamic-pagination span a.active').next().addClass('active').siblings().removeClass('active');
      var newQueryString = filterOnSelect();
      //// console.log(newQueryString); 
      searchaniseProducts(newQueryString);  
    });
    searchaniseFiltersOnload(queryString);
    function searchaniseFiltersOnload(queryString) {
    $.ajax({	
        url: searchBaseUrl + queryString,
        dataType: 'jsonp',
        success: function(data){		
          searchData = data;
          // console.log('\n\n----------------');
          // console.log(searchData);    
          // console.log('----------------\n\n');
          if(data.hasOwnProperty('error') ==  true){
          // $('.sn-loader, .filter-loader-icn').fadeOut();
          $('[data-collection-listing-container]').addClass('full-width').prepend('<p class="no-result">There are currently no products in this collection, please check back later</p>');
        } else {
          $('#filter-cta-mob .filter-result-count').text(data.totalItems);
          $('.collection-header').data('limit');
          if($('.collection-header').attr('data-limit') < searchData.totalItems){
            //// console.log('less then Search limit -- show pagination');
            ///$('.collection-header-result-per-page').closest('.collection-bottom-pagination-data').removeClass('hidepaginate');
              //$('.collection-header-result-per-page').css('opacity', 1).css('pointer-events', 'initial');;
          }else{
           // // console.log('greater thene Search limit -- hide pagination');
            // $('.collection-header-result-per-page').css('opacity', 0).css('pointer-events', 'none');
            // $('.collection-header-result-per-page').closest('.collection-bottom-pagination-data').addClass('hidepaginate');
          }   
          filters = searchData.facets;            
          
          //Init
          //var getmaxitemperpage = $('select.result-per-page option:selected').attr('data-count');
          createFilters();
          // printProducts(searchData.items);

          // setTimeout(function(){
          //   location.reload();
          // },7000);

        }

        }       
      });
    }

    function searchaniseProducts(queryString) {
    $.ajax({	
        url: searchBaseUrl + queryString,
        dataType: 'jsonp',
        success: function(data){		
          searchData = data;
          // console.log('\n\n----------------');
          // console.log(searchData);    
          // console.log('----------------\n\n');
          if(data.hasOwnProperty('error') ==  true){
          // $('.sn-loader, .filter-loader-icn').fadeOut();
          $('[data-collection-listing-container]').addClass('full-width').prepend('<p class="no-result">There are currently no products in this collection, please check back later</p>');
        } else {
          $('.collection-header').data('limit');
          $('#filter-cta-mob .filter-result-count').text(data.totalItems);
          if($('.collection-header').attr('data-limit') < searchData.totalItems){
            //// console.log('less then Search limit -- show pagination');
            ///$('.collection-header-result-per-page').closest('.collection-bottom-pagination-data').removeClass('hidepaginate');
              //$('.collection-header-result-per-page').css('opacity', 1).css('pointer-events', 'initial');;
          }else{
           // // console.log('greater thene Search limit -- hide pagination');
            // $('.collection-header-result-per-page').css('opacity', 0).css('pointer-events', 'none');
            // $('.collection-header-result-per-page').closest('.collection-bottom-pagination-data').addClass('hidepaginate');
          }   
          filters = searchData.facets;  
          
          
          //Init
          var getmaxitemperpage = 16;
          // createFilters();
          createPagination(searchData.totalItems, searchData.startIndex/getmaxitemperpage); 
          printProducts(searchData.items);

        }

        }       
      });
    }
    
    
     

    
    //Create Filters
    	function createFilters(){ 
          $('[data-collection-filter-section]').empty();
          $.each(filters, function(key, val){ 
            //// console.log(val);
            var filterName = val.attribute;
            var filterTitle = val.title;
            var filterId = filterTitle.toLowerCase().replace(' ', '-');
            var filterVal = val.buckets;
            var sidebarHtml = '';
            // Range type layout for price filter
            if(filterTitle == 'Price') {
              var minPrice = parseFloat(filterVal[0].from).toFixed(2);
              var highestPrice = parseFloat(filterVal[0].to).toFixed(2);
              var selectedMinPrice = parseFloat(filterVal[0].left).toFixed(2);
              var SelectedHighestPrice = parseFloat(filterVal[0].right).toFixed(2);
              if(filterVal[0].selected != undefined && filterVal[0].selected != '' && filterVal[0].selected == 'true'){
                var checked = 'checked=checked';
              }
              // optionsHtml+='<div id="slider-range"></div><span id="collection-price-min"></span> <span id="collection-price-max"></span>';
              // optionsHtml+='<input ' + checked + ' type="checkbox" data-opt-val="&restrictBy[price]=' + minPrice + ','+ highestPrice +'" value="&restrictBy[price]=' + minPrice + ','+ highestPrice +'" id="price-val-range" class="visually-hidden" />';          	
              // sidebarHtml+= '<div class="collection-content-area-left-content price__filter" style="max-width: 280px;"><div class="collection-content-area-left-content-wrapper"><div class="collection-other-list">' + optionsHtml +'</div></div></div>';
              // if(minPrice != highestPrice){ $('.collection-filters').append(sidebarHtml); };
              // if($('#slider-range .ui-slider-range').length <= 0){
              //   // initializingPriceSlider(minPrice, highestPrice, selectedMinPrice, SelectedHighestPrice);
              // }  

            } else if(filterTitle == 'Collections'){


            } else if(filterTitle == 'global.dia_tab1_stone_shape'){
              var counter = 0;
                  var selectOptionLabel = '<div class="filter-by-label">Shape <span><a href="javascript:;" aria-label="Learn more about shapes">Learn More &gt;</a></span></div>'
                  var selectOption = '';	
              	  // var checked = '';
                  var checkVal = '';
                  var fileUrl = 'https://cdn.shopify.com/s/files/1/0575/2681/2840/files/';
                  if(filterTitle == 'global.dia_tab1_stone_shape'){
                    filterTitle = 'Shape';
                  }
                  filterId = filterId.replace('global.', '');
                  $.each(filterVal, function(key, val){
                    var disableItem = '';

                    if(val.count >= 0){
                        if(val.count == 0){
                          disableItem = 'toDisabled';
                        }
                        var show = 'toShow';
                        filterName=filterName.toLowerCase().replace(' ', '-'); //// console.log('Filtername==>'+filterName);
                        var thisVal = val.value;//// console.log('thisVal == >  ' + thisVal);
                        var filterVal = '&restrictBy[' + filterName + ']=' + val.value; // console.log(val.selected);
                        if(val.selected != undefined && val.selected != '' && val.selected == 'true'){
                          var selected = 'selected=selected';
                          var checked = 'checked=checked';
                          	  checkVal = thisVal;
                        }
                        selectOption += '<div class="collection_filter_by_shape'+ show +' '+ disableItem +'" data-shape="shape_'+encodeURIComponent(thisVal).toLowerCase()+'">';
                  selectOption += '<input type="checkbox"  id="'+filterId+'_'+encodeURIComponent(thisVal)+'-filter" ' + checked + ' class="visually-hidden" value="' + encodeURIComponent(thisVal) + '">';
                  selectOption += '<label for="'+filterId+'_'+encodeURIComponent(thisVal)+'-filter" class="filter__label">';
                    selectOption += '<img data-src="'+fileUrl+'ld_shape_'+encodeURIComponent(thisVal).toLowerCase()+'.svg" class="lazyload"><span>' + thisVal +'</span></label>';
                  selectOption += '</div>';
                        counter++;                        
                    }

                  
                  });

                  if(counter >= 1){
                    sidebarHtml+= '<div class="collection-filter-wrapper" data-filter="&restrictBy[' + filterName + ']" data-filter-type="shape-filter">' + selectOption +'</div>';
                  	$('[data-collection-filter-section]').prepend(sidebarHtml);
                    $('[data-collection-filter-section]').prepend(selectOptionLabel);
                  }

            }else {
              // Common layout for print dropdown filter 
              var counter = 0;
                  var selectOption = '';	
              	  var checked = '';
                  var checkVal = '';
                  if(filterTitle == 'global.metal_type'){
                    filterTitle = 'Metal Type';
                  }
                  // selectOption += '<select name="product-type" id="'+filterId+'" class="filters-toolbar__input">';
                  
                  // selectOption += '<option data-opt-val="" value="" selected="selected">'+filterTitle+'</option>';          
                  // $.each(filterVal, function(key, val){
                  //   if(val.count > 0){
                  //       var show = 'toShow';
                  //       filterName=filterName.toLowerCase().replace(' ', '-'); //// console.log('Filtername==>'+filterName);
                  //       var thisVal = val.value;//// console.log('thisVal == >  ' + thisVal);
                  //       var filterVal = '&restrictBy[' + filterName + ']=' + val.value;
                  //       if(val.selected != undefined && val.selected != '' && val.selected == 'true'){
                  //         var selected = 'selected=selected';
                  //             checked = 'checked=checked';
                  //         	  checkVal = thisVal;
                  //       }
                  //       selectOption += '<option data-opt-val="' + encodeURIComponent(thisVal) + '" ' + selected + ' value="' + filterVal + '">' + thisVal + '</option>';
                  //       counter++;                        
                  //   }
                  // });
                  // selectOption  += '</select><input type="checkbox" id="'+filterId+'-filter" value="' + checkVal + '" ' + checked + ' class="visually-hidden" />';

                  selectOption += '<div name="product-type" id="'+filterId+'" class="filters-toolbar__input">';
                    selectOption += '<span class="filter-option-name">'+filterTitle+'</span>';
                    selectOption += '<ul class="filter-dd">'
                    $.each(filterVal, function(key, val){
                      var disableItem = '';
                      //console.log(val);
                    if(val.count >= 0){
                      if(val.count == 0){
                          disableItem = 'toDisabled';
                        }
                        var show = 'toShow';
                        filterName=filterName.toLowerCase().replace(' ', '-'); //// console.log('Filtername==>'+filterName);
                        var thisVal = val.value;//// console.log('thisVal == >  ' + thisVal);
                        if(val.value.indexOf(':') > -1) {
                          var thisValContent = val.value.split(':')[1];  
                        }else {
                          var thisValContent = val.value;//// console.log('thisVal == >  ' + thisVal);
                        }                       

                        var filterVal = '&restrictBy[' + filterName + ']=' + val.value;
                        if(val.selected != undefined && val.selected != '' && val.selected == 'true'){
                          var selected = 'selected=selected';
                          var checked = 'checked=checked';
                          	  checkVal = thisVal;                          
                        }
                        selectOption += '<li class="input-group ' + show +' '+ disableItem + '"><input type="checkbox" ' + checked +' id="'+filterId+'_'+encodeURIComponent(thisVal)+'-filter" value="' + thisVal + '" class="visually-hidden"/> <label for="'+filterId+'_'+encodeURIComponent(thisVal)+'-filter">'+ thisValContent +'</label></li>';
                        
                        //<li class="input-group"> data-opt-val="' + encodeURIComponent(thisVal) + '"' + selected + '  data-value="' + filterVal + '">' + thisVal + '</li>';
                        counter++;                        
                    }
                  });                  
                  selectOption  += '</ul></div>';
                  if(counter >= 1){
                    sidebarHtml+= '<div class="collection-filter-wrapper" data-filter="&restrictBy[' + filterName + ']" data-filter-type="'+ filterName +'">' + selectOption +'</div>';
                  	$('[data-collection-filter-section]').append(sidebarHtml);
                  }
                }            
          });

          //Show open the selected filters
          var totSelectedFilters = 0;
          $('[data-collection-filter-section] .collection-filter-wrapper').each(function(){
            var selectedFils = $(this).find('input:checked').length; //('selectedFils==>' + selectedFils)
            if(selectedFils > 0){
              // $(this).prev('.collection-content-area-left-heading').find('span').attr('class', 'expend');
              // $(this).css('display', 'block');
              totSelectedFilters++;
            }
          });
          if(totSelectedFilters > 0){
            // $('.resetFilters').css('display', 'inline-block');
          }else{
            // $('.resetFilters').css('display', 'none');
          }
      }

     
      // Filter on Select event
     function filterOnSelect(){ 
        // $('.dynamic-loadmore-btn-box').show();
        var currentPage = Number($('.dynamic-pagination span a.active').text());
          
          
          if(currentPage > 1) {
            currentPage = currentPage-1; // console.log(currentPage);
            var Startitems = maxResults*currentPage;// console.log("startItems==>>" + Startitems);      
          } else {
            var Startitems = 0;
          }
      

        searchsortby = $(document).find("#sortByFilter option:selected").attr('value');
        var activeFilter = '';
        var fil = $('[data-collection-filter-section] input[type="checkbox"]:checked');  console.log('fil==>' + fil);  console.log(fil);
        if(fil.length > 0) {
          $.each(fil, function(i, v){
            console.log(i);
            console.log(v.id);
            console.log(v.value);
            activeFilter += '<button data-clear-filter="" class="active-filter" data-value="'+v.value+'" data-key="'+v.id+'" aria-label="Clear '+v.value+' filter">'+v.value+'<span class="clear-filter" aria-hidden="true">x</span></button>';
          });
          $(document).find('[data-active-filters]').html(activeFilter);
        }
        '&output=jsonp&sortBy='+ searchsortby +'&'+'startIndex='+ Startitems +'&maxResults=' + maxResults + '&items=true&facets=true&facetsShowUnavailableOptions=true&' + defFilterName;
      // var newQueryString = queryString
      var newQueryString = '&output=jsonp&sortBy='+ searchsortby +'&'+'startIndex='+ Startitems +'&maxResults=' + maxResults + '&items=true&facets=true&facetsShowUnavailableOptions=true&' + defFilterName;
      $(document).find('[data-collection-filter-section] .collection-filter-wrapper').each(function(){
        var thisFilterName = $(this).data('filter'); //// console.log('thisFilterName==> ' + thisFilterName);
        var filValues = $(this).find('input[type="checkbox"]:checked');
        
        //// console.log(filValues.length);
        var filSelected = '';
        if(filValues.length > 0){
          filValues.each(function(i){ 
            // console.log(i);
            filSelected+=$(this).closest('input[type="checkbox"]:checked ').val();
            // console.log('filSelected==>>>>');
            // console.log(filSelected);
            if(i+1 < filValues.length){
              filSelected += '|';
            }  
          });
        }
        var selFils = thisFilterName+'='+filSelected;
        if(filSelected!=''){
          newQueryString+=selFils.replace('undefined=', '');          
        } 
      });
      newQueryString+='&maxResults='+maxResults;
      console.log('==========>>');
      console.log(newQueryString)
      console.log('==========>>');
      return newQueryString;
      }

      function createPagination(totalNoOfProducts, startIndex){
          $('.dynamic-pagination').empty();

          var pageperview = 16;

          var totalProducts = totalNoOfProducts;      	
          var noOfPages = totalProducts/pageperview;
          
          if(totalProducts <= pageperview){
            noOfPages = 0;
          }
          var x = Math.floor(noOfPages);
          if(pageperview*x < totalProducts){
            x++;
          }
          Pagination.Init($('.dynamic-pagination')[0], {
              size: x, // pages size
              page: startIndex+1,  // selected page
              step: 3   // pages before and after current
            });
        }
      
      // Print Product 
      function printProducts(prodObj){   
        $(document).find('[data-col-images-slider-init]').slick("unslick");
        if($('[data-collection-listing-container]').hasClass('inital-load')) {
          $('[data-collection-listing-container] [data-view="grid"] [data-init-content], .bottom-pagination-row').remove();
          $('[data-collection-listing-container] [data-view="grid"] [data-list-item ]').empty();
              
        }
        
        var productGrid = '';
       
        // console.log(prodObj);
        var getcollection = "{{ collection.handle }}";
        // $('[data-collection-listing-container]').html('');
        // productGrid += '<ul class="grid grid--uniform grid--view-items">';
        $.each(prodObj, function(i) {   
            var getprodlink = prodObj[i].link,
                prodLink = prodObj[i].link,
                prodQty = prodObj[i].quantity,
                prodTitle = prodObj[i].title,
                prodTags = prodObj[i].tags,
                prodImages = prodObj[i].shopify_images,
                prodId = prodObj[i].id;
               // console.log('ImageLength:: === >');
                // console.log(prodImages.length);

            getcollectionlink = '/collections/'+getcollection;
            var _thistags = prodTags;
            console.log('TAGSSS');
            console.log(_thistags);
            console.log('TAGSSS');

            _thistags = _thistags.split('[:ATTR:]');
            console.log('TAGSS==>>>>>')
            console.log(_thistags)
            console.log('TAGSS==>>>>>')
            var _this_variants = prodObj[i].shopify_variants;
            console.log('==============');
            console.log(_this_variants);
            console.log('==============');
            var _variantComparePrice = [];
            var _variantRegularPrice = [];
            var _variant_ComparePrice_Max = '';
            var _variant_ComparePrice_Min = '';
            var _variant_RegularPrice_Max = '';
            var _variant_RegularPrice_Min = '';
            var ItemPrice = '';
            var prodPrice = parseInt(prodObj[i].price)*100;
                //prodPrice = theme.Currency.formatMoney(prodPrice, theme.moneyFormat).replace('.00',''),                
            var prodComparePrice = parseInt(prodObj[i].list_price)*100;
            //product.compare_at_price | minus: product.price | times: 100.0 | divided_by: product.compare_at_price 
                //prodComparePrice = theme.Currency.formatMoney(prodComparePrice, theme.moneyFormat).replace('.00','')
                if(prodComparePrice > prodPrice) {
                  var productDiscount =  prodComparePrice / (prodComparePrice - prodPrice);
                  productDiscount = productDiscount.toFixed(2);
                  console.log(productDiscount);
                  
                  ItemPrice += '<div class="product-price-card-row price_row">';
                  ItemPrice += '<div class="ragular_price">'+theme.Currency.formatMoney(prodPrice, theme.moneyFormat).replace('.00','')+'</div>';
                  ItemPrice += '<div class="compare_at_price">'+theme.Currency.formatMoney(prodComparePrice, theme.moneyFormat).replace('.00','')+'</div>';
                  ItemPrice += '<div class="product_discount">'+productDiscount+'% OFF</div>';
                  ItemPrice += '</div>';
                } else {
                  ItemPrice += '<div class="product-price-card-row price_row">';
                  ItemPrice += '<div class="ragular_price">'+theme.Currency.formatMoney(prodPrice, theme.moneyFormat).replace('.00','')+'</div>';
                  ItemPrice += '<div class="compare_at_price"></div>';
                  ItemPrice += '<div class="product_discount"></div>';
                  ItemPrice += '</div>';
                }

                  console.log('AAA');

            var ldTableContent = '';
            var ldGridContent = '';
            var ldGridContentMob = '';
            var jwGridTitle = '';
            var jwGridContent = '';
            if($('body').attr('data-template') == 'loose-stone-plp'){ 
              console.log('inside Loosestone');
              ldGridContent += '<div class="product-price-card-row hide_mobile">';
            $.each(_thistags, function(i){  
              console.log(_thistags[i]); 
              if(_thistags[i].includes(':')){
                let tagVal = _thistags[i].split(':')[1];            
              if(_thistags[i].includes('LDDEPTH:')){ldTableContent += '<tr><td>Depth:</td><td>'+tagVal+'</td></tr>';}
              if(_thistags[i].includes('LDTABLE:')){ldTableContent += '<tr><td>Table:</td><td>'+tagVal+'</td></tr>';}
              if(_thistags[i].includes('LDFLUORSCENCE:')){ldTableContent += '<tr><td>Fluorescence:</td><td>'+tagVal+'</td></tr>';}
              if(_thistags[i].includes('LDPOLISH:')){ldTableContent += '<tr><td>Polish:</td><td>'+tagVal+'</td></tr>';}
              if(_thistags[i].includes('LDSYMMETRY:')){ldTableContent += '<tr><td>Symmetry:</td><td>'+tagVal+'</td></tr>';}
              if(_thistags[i].includes('LDCLARITY:')){ldTableContent += '<tr><td>CLARITY:</td><td>'+tagVal+'</td></tr>';}
              if(_thistags[i].includes('LDCT:')){ldGridContent += '<div class="product_b_tex">'+tagVal+'</div>';}
              if(_thistags[i].includes('LDSHAPE:')){ldGridContent += '<div class="product_b_tex">'+tagVal+'</div>';}
              if(_thistags[i].includes('LDCOLOR:')){ldGridContent += '<div class="product_b_tex">'+tagVal+'</div>';}
              }
            })
            ldGridContent += '</div>';
            ldGridContentMob += '<div class="product-price-card-row show_mobile">';
              ldGridContentMob += '<div class="r1">';
                $.each(_thistags, function(i){ 
                  if(_thistags[i].indexOf(':') > -1 ){
                  let tagVal = _thistags[i].split(':')[1];  
                if(_thistags[i].includes('LDCT:')){ldGridContentMob += '<div class="product_b_tex">'+tagVal+'</div>';}
                if(_thistags[i].includes('LDSHAPE:')){ldGridContentMob += '<div class="product_b_tex">'+tagVal+'</div>';}
                  }
                });
              ldGridContentMob += '</div>'
              ldGridContentMob += '<div class="r2">';
                $.each(_thistags, function(i){ 
                  if(_thistags[i].includes(':')){
                  let tagVal = _thistags[i].split(':')[1];  
                if(_thistags[i].includes('LDPOLISH:')){ldGridContentMob += '<div class="product_b_tex">'+tagVal+'</div>';}
                if(_thistags[i].includes('LDCOLOR:')){ldGridContentMob += '<div class="product_b_tex">'+tagVal+'</div>';}
                if(_thistags[i].includes('LDCLARITY:')){ldGridContentMob += '<div class="product_b_tex">'+tagVal+'</div>';}
                  }
                });
              ldGridContentMob += '</div>';            
            ldGridContentMob += '</div>';
          } else {
            console.log('inside jewellery');
            jwGridTitle += '<div class="h4 grid-view-item__title product-card__title" aria-hidden="true"><a href="'+ prodLink +'">'+ prodTitle+'</a></div>';
            jwGridContent += '<div class="product-price-card-row">';
              $.each(_thistags, function(i){ 
                console.log('INdex==>' + i);
                console.log(_thistags[i]);
                return false;
                if(_thistags[i].includes(':')){
                let tagVal = _thistags[i].split(':')[1];  
                if(_thistags[i].includes('JWCTW:')){jwGridContent += '<div class="product_weight">'+tagVal+'</div>';}
                if(_thistags[i].includes('JWCOLOR:')){jwGridContent += '<div class="product_def">'+tagVal+'</div>';}
                }
              });
              jwGridContent +='<div class="product_compare">Compare</div>';
              jwGridContent +='</div>'
          }
          console.log(jwGridContent);
          // return false;
            if(prodQty <= 0 ){
              var prodAvaibility = 'grid-view-item--sold-out';
            }     
            if(prodImages.length > 1 ){
              var prodImgSlider = 'product_images_slider';
              var prodImgSliderDyn = 'data-col-images-slider-init'
            }    

            // productGrid += '{% if product.compare_at_price %}<div class="compare_at_price">{{ product.compare_at_price | money | remove: '.00' }}</div>{% endif %}'
            //       productGrid += '{% assign discount = product.compare_at_price | minus: product.price | times: 100.0 | divided_by: product.compare_at_price %}'
            //       productGrid += '{% if product.compare_at_price %}<div class="product_discount">{{ discount | floor }}% OFF</div>{% endif %}'
            if($('body').attr('data-template') == 'loose-stone-plp'){ 
              productGrid += '<li class="grid__item grid__item--loose-stone-plp-template  bbb">';
            }else {
              productGrid += '<li class="grid__item grid__item--solitaire-collection  aaa">';
            }
            
            productGrid += '<div class="grid-view-item product-card">';
            productGrid += '<a class="grid-view-item__link grid-view-item__image-container full-width-link" href="'+getprodlink+'" style="display: none;"><span class="visually-hidden">'+prodTitle+'</span></a>';
            productGrid += '<div class="product-images-wrapper"> <div class="product-images-wrapper '+prodImgSlider+'" data-col-images-slider '+prodImgSliderDyn+'>';
             
                for (let j = 0; j < prodImages.length; j++) {
                  if(prodImages[j].indexOf('_XYZG') > -1) {
                    productGrid += '<div class="product-card__image-with-placeholder-wrapper product-images-slide" data-image-loading-animation><div id="" class="grid-view-item__image-wrapper product-card__image-wrapper js"><div class="product_img_holder"><img data-src="'+prodImages[j]+'" alt="'+ prodTitle+'" class="grid-view-item__image lazyload"></div></div></div>'
                  }
                }              
                productGrid += '</div>';
                productGrid += '<a class="full_link" href="'+getprodlink+'"></a>';
                if($('body').attr('data-template') == 'loose-stone-plp'){ 
                  productGrid += '<div class="hide_mobile">';
                  productGrid += '<div class="product-image-body-row">';
                  productGrid += '<a class="compare_btn">COMPARE</a>';
                  productGrid += '<a class="p_more_btn"><span class="text_more">MORE</span><span class="text_less">LESS</span></a>';
                  productGrid += '</div>';
                  productGrid += '<div class="more_product_datatable" style="display: none;">';
                  productGrid += ' <table><tbody>';
                  productGrid += ldTableContent;
                  productGrid += '</tbody></table>';
                  productGrid += '</div>'
                  productGrid += '</div>';
                }
                productGrid += '</div>'
                productGrid += '<div class="prodct_card_body">' 
                productGrid += jwGridTitle;
                productGrid += '<span style="display: none;"></span>';
                productGrid += '<div class="product-price-card">'
                productGrid += ldGridContent;
                productGrid += ldGridContentMob;
                productGrid += jwGridContent;
                productGrid += ItemPrice;
                // productGrid += '<div class="product-price-card-row price_row">'
                // productGrid += '<div class="ragular_price">'+ prodPrice +'</div>'
                // productGrid += '</div>'
                productGrid += '</div>'  
                productGrid += '</div>'
                productGrid += '</div>'
                productGrid += '</div>'
                productGrid += '</li>'

                // $('[data-collection-listing-container] [data-view="grid"] [data-list-item]').append(productGrid).removeClass('hide'); 
        });
        
            // productGrid += '</ul>';

            // // console.log(productGrid);
                $('[data-collection-listing-container] [data-view="grid"] [data-list-item]').append(productGrid).removeClass('hide');   
                 
                var len = $(document).find('.dynamic-pagination span a').length;
                var txt = Number($(document).find('.dynamic-pagination span a.active').text());
                console.log('len==>' + len + '== '+ txt);
                if(len === txt){
                  console.log('yes matched len and txt')
                  $(document).find('.dynamic-loadmore-btn-box, .dynamic-loader-spiner').hide();
                  
                }else {
                  console.log('current Item not matched len and text');
                  $(document).find('.dynamic-loadmore-btn-box, .dynamicloadMore-btn').show();
                  $(document).find('.dynamic-loader-spiner').hide();  
                }
                
                $(document).find('[data-col-images-slider-init]').slick(sliderInit());
              //  sliderInit();  
      }
      function sliderInit(){               
          return {
          // $(document).find('[data-col-images-slider-init]').slick({
            autoplay: false,
            autoplaySpeed: 500,
            arrows: true,
            slidesToShow: 1,
            slidesToScroll: 1,
            Infinite: false,
            loop: false,
            dots: false
          // });
        }
      };

      //Initialize Price Slider
    	function initializingPriceSlider(minPrice, highestPrice, selectedMin, selectedMax){
          var getMinAmt = minPrice;
          var getMaxAmt = highestPrice;
            $('#price-min-val').val(minPrice);
            $('#price-max-val').val(highestPrice);      	
            $( "#slider-range" ).slider({
            range: true,
            min: parseFloat(minPrice),
            max: parseFloat(highestPrice),
            values: [ selectedMin, selectedMax ],
            slide: function( event, ui ) { 
              // $( "#collection-price-min" ).text("$" + minPrice);
              // $( "#collection-price-max" ).text("$" + highestPrice);
              // $('.price__filter').prev('.collection-content-area-left-heading').find('.selRange').remove();
    			// if(parseFloat(ui.values[ 0 ].toFixed(2)) > parseFloat(minPrice) || parseFloat(ui.values[ 1 ].toFixed(2)) < parseFloat(highestPrice)){
                // $('.price__filter').prev('.collection-content-area-left-heading').append('<i class="selRange">($' + ui.values[ 0 ].toFixed(2) +' - $' + ui.values[ 1 ].toFixed(2) + ')</i>');
               priceSelected = '&restrictBy[price]=' + ui.values[ 0 ] + ','+ ui.values[ 1 ];
    			// }    
            },
            stop: function( event, ui ) {
              // $('#price-val-range').attr('data-opt-val', '&restrictBy[price]=' + ui.values[ 0 ] + ','+ ui.values[ 1 ]).val('&restrictBy[price]=' + ui.values[ 0 ] + ','+ ui.values[ 1 ]).attr('checked', 'checked').change(); 
            }
          });
          // $( "#collection-price-min" ).text( "$" + minPrice);
          // $( "#collection-price-max" ).text( "$" + highestPrice);
          // $('.price__filter').prev('.collection-content-area-left-heading').find('.selRange').remove();

          if(parseFloat(selectedMin) > parseFloat(minPrice) || parseFloat(selectedMax) < parseFloat(highestPrice)){
            // $('.price__filter').prev('.collection-content-area-left-heading').append('<i class="selRange">($' + selectedMin +' - $' + selectedMax + ')</i>');
          }      
        }
    	//Initialize Price Slider Ends
  });
  </script>
