{% comment %}
  The contents of the collection.liquid template can be found in /sections/collection-template.liquid
{% endcomment %}

{% comment %}
{% section 'collection-template' %}
{% endcomment %}
{% comment %}
{% include 'searchanise-navigation' %}
{% endcomment %}


{% section 'solitaire-banner-slider' %}

{% section 'solitaire-collection' %}

{% section 'solitaire-image-with-content' %}

{% section 'diamond-ambasaador-slider' %}



<link rel="stylesheet" href="{{'filter-layout.css' | asset_url }}">
<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/jqueryui-touch-punch/0.2.3/jquery.ui.touch-punch.min.js"></script>

<script type="text/javascript">
  $(function(){
    var maxResults = 48;
    var defFilterName = 'restrictBy[collections]={{ collection.title | replace: ',' , '\,' | url_encode }}';
      var searchsortby = $(document).find("#sortByFilter option:selected").attr('value'); console.log('sortyBy==> '+ searchsortby);
      var searchBaseUrl = 'https://www.searchanise.com/getresults?api_key=7r9L5P8L4h';

      var queryString = '&output=jsonp&sortBy='+ searchsortby +'&'+'startIndex=0&maxResults=' + maxResults + '&items=true&facets=true&facetsShowUnavailableOptions=true&' + defFilterName;
      var searchData = '';
    var filters = '';

    $(document).on('change', '[data-collection-filter-section] select', function(){
      console.log('select changes');
      var getSelectedVal = $(this).val();
      $(this).find('option:selected').attr('selected','selected').siblings().removeAttr('selected');
      var getId = $(this).attr('id'); console.log(getId);
      $(document).find('[data-collection-filter-section] input[id="'+getId+'-filter"]').val(getSelectedVal).attr('checked', 'checked');
      $(this).next(':checkbox').trigger('change');
    })

    $('body').on('change','[data-collection-filter-section] input[type="checkbox"]', function(){     
      console.log('input changess'); 
      var newQueryString = filterOnSelect();     
      console.log('New Query Stirng --------------')
      console.log(newQueryString); 	
      console.log('New Query Stirng --------------')
      searchaniseProducts(newQueryString);  
    });

    searchaniseFiltersOnload(queryString);
    function searchaniseFiltersOnload(queryString) {
    $.ajax({	
        url: searchBaseUrl + queryString,
        dataType: 'jsonp',
        success: function(data){		
          searchData = data;
          console.log('\n\n----------------');
          console.log(searchData);    
          console.log('----------------\n\n');
          if(data.hasOwnProperty('error') ==  true){
          // $('.sn-loader, .filter-loader-icn').fadeOut();
          $('[data-collection-listing-container]').addClass('full-width').prepend('<p class="no-result">There are currently no products in this collection, please check back later</p>');
        } else {
          $('.collection-header').data('limit');
          if($('.collection-header').attr('data-limit') < searchData.totalItems){
            //console.log('less then Search limit -- show pagination');
            ///$('.collection-header-result-per-page').closest('.collection-bottom-pagination-data').removeClass('hidepaginate');
              //$('.collection-header-result-per-page').css('opacity', 1).css('pointer-events', 'initial');;
          }else{
           // console.log('greater thene Search limit -- hide pagination');
            // $('.collection-header-result-per-page').css('opacity', 0).css('pointer-events', 'none');
            // $('.collection-header-result-per-page').closest('.collection-bottom-pagination-data').addClass('hidepaginate');
          }   
          filters = searchData.facets;  
          
          
          //Init
          //var getmaxitemperpage = $('select.result-per-page option:selected').attr('data-count');
          createFilters();
          // printProducts(searchData.items);

        }

        }       
      });
    }

    function searchaniseProducts(queryString) {
    $.ajax({	
        url: searchBaseUrl + queryString,
        dataType: 'jsonp',
        success: function(data){		
          searchData = data;
          console.log('\n\n----------------');
          console.log(searchData);    
          console.log('----------------\n\n');
          if(data.hasOwnProperty('error') ==  true){
          // $('.sn-loader, .filter-loader-icn').fadeOut();
          $('[data-collection-listing-container]').addClass('full-width').prepend('<p class="no-result">There are currently no products in this collection, please check back later</p>');
        } else {
          $('.collection-header').data('limit');
          if($('.collection-header').attr('data-limit') < searchData.totalItems){
            //console.log('less then Search limit -- show pagination');
            ///$('.collection-header-result-per-page').closest('.collection-bottom-pagination-data').removeClass('hidepaginate');
              //$('.collection-header-result-per-page').css('opacity', 1).css('pointer-events', 'initial');;
          }else{
           // console.log('greater thene Search limit -- hide pagination');
            // $('.collection-header-result-per-page').css('opacity', 0).css('pointer-events', 'none');
            // $('.collection-header-result-per-page').closest('.collection-bottom-pagination-data').addClass('hidepaginate');
          }   
          filters = searchData.facets;  
          
          
          //Init
          //var getmaxitemperpage = $('select.result-per-page option:selected').attr('data-count');
          createFilters();
          printProducts(searchData.items);

        }

        }       
      });
    }
    
    
     

    
    //Create Filters
    	function createFilters(){ 
          $('[data-collection-filter-section]').empty();
          $.each(filters, function(key, val){ 
            //console.log(val);
            var filterName = val.attribute;
            var filterTitle = val.title;
            var filterId = filterTitle.toLowerCase().replace(' ', '-');
            var filterVal = val.buckets;
            var sidebarHtml = '';
            // Range type layout for price filter
            if(filterTitle == 'Price') {
              var minPrice = parseFloat(filterVal[0].from).toFixed(2);
              var highestPrice = parseFloat(filterVal[0].to).toFixed(2);
              var selectedMinPrice = parseFloat(filterVal[0].left).toFixed(2);
              var SelectedHighestPrice = parseFloat(filterVal[0].right).toFixed(2);
              if(filterVal[0].selected != undefined && filterVal[0].selected != '' && filterVal[0].selected == 'true'){
                var checked = 'checked=checked';
              }
              // optionsHtml+='<div id="slider-range"></div><span id="collection-price-min"></span> <span id="collection-price-max"></span>';
              // optionsHtml+='<input ' + checked + ' type="checkbox" data-opt-val="&restrictBy[price]=' + minPrice + ','+ highestPrice +'" value="&restrictBy[price]=' + minPrice + ','+ highestPrice +'" id="price-val-range" class="visually-hidden" />';          	
              // sidebarHtml+= '<div class="collection-content-area-left-content price__filter" style="max-width: 280px;"><div class="collection-content-area-left-content-wrapper"><div class="collection-other-list">' + optionsHtml +'</div></div></div>';
              // if(minPrice != highestPrice){ $('.collection-filters').append(sidebarHtml); };
              // if($('#slider-range .ui-slider-range').length <= 0){
              //   // initializingPriceSlider(minPrice, highestPrice, selectedMinPrice, SelectedHighestPrice);
              // }  

            } else if(filterTitle == 'Collections'){


            } else {
              // Common layout for print dropdown filter 
              var counter = 0;
                  var selectOption = '';	
              	  var checked = '';
                  var checkVal = '';
                  selectOption += '<select name="product-type" id="'+filterId+'" class="filters-toolbar__input">';
                  selectOption += '<option data-opt-val="" value="" selected="selected">'+filterTitle+'</option>';          
                  $.each(filterVal, function(key, val){
                    if(val.count >= 0){
                        var show = 'toShow';
                        filterName=filterName.toLowerCase().replace(' ', '-'); //console.log('Filtername==>'+filterName);
                        var thisVal = val.value;//console.log('thisVal == >  ' + thisVal);
                        var filterVal = '&restrictBy[' + filterName + ']=' + val.value;
                        if(val.selected != undefined && val.selected != '' && val.selected == 'true'){
                          var selected = 'selected=selected';
                              checked = 'checked=checked';
                          	  checkVal = thisVal;
                        }
                        selectOption += '<option data-opt-val="' + encodeURIComponent(thisVal) + '" ' + selected + ' value="' + filterVal + '" >' + thisVal + '</option>';
                        counter++;                        
                    }
                  });
                  selectOption  += '</select><input type="checkbox" id="'+filterId+'-filter" value="' + checkVal + '" ' + checked + ' class="visually-hidden" />';
                  if(counter >= 1){
                    sidebarHtml+= '<div class="collection-filter-wrapper" data-filter="&restrictBy[' + filterName + ']">' + selectOption +'</div>';
                  	$('[data-collection-filter-section]').append(sidebarHtml);
                  }
                }            
          });

          //Show open the selected filters
          var totSelectedFilters = 0;
          $('[data-collection-filter-section] .collection-filter-wrapper').each(function(){
            var selectedFils = $(this).find('input:checked').length; console.log('selectedFils==>' + selectedFils)
            if(selectedFils > 0){
              // $(this).prev('.collection-content-area-left-heading').find('span').attr('class', 'expend');
              // $(this).css('display', 'block');
              totSelectedFilters++;
            }
          });
          if(totSelectedFilters > 0){
            // $('.resetFilters').css('display', 'inline-block');
          }else{
            // $('.resetFilters').css('display', 'none');
          }
      }

     
      // Filter on Select event
     function filterOnSelect(){   
        searchsortby = $(document).find("#sortByFilter option:selected").attr('value');
        var fil = $('[data-collection-filter-section] input[type="checkbox"]:checked'); console.log('fil==>' + fil);  console.log(fil);
      var newQueryString = queryString
      $(document).find('[data-collection-filter-section] .collection-filter-wrapper').each(function(){
        var thisFilterName = $(this).data('filter'); console.log('thisFilterName==> ' + thisFilterName);
        var filValues = $(this).find('input[type="checkbox"]:checked');  console.log(filValues.length);
        var filSelected = '';
        if(filValues.length > 0){
          filValues.each(function(i){ 
            filSelected+=$(this).closest('.collection-filter-wrapper').find('select.filters-toolbar__input option:selected').attr('data-opt-val');
            console.log('filSelected==>>>>');
            console.log(filSelected);
            if(i+1 < filValues.length){
              filSelected += '|';
            }  
          });
        }
        var selFils = thisFilterName+'='+filSelected;
        if(filSelected!=''){
          newQueryString+=selFils.replace('undefined=', '');          
        } 
      });
      newQueryString+='&maxResults='+maxResults;
      return newQueryString;
      }
      
      // Print Product 
      function printProducts(prodObj){   
        $('[data-collection-listing-container]').empty();     
        var productGrid = '';
        console.log(prodObj);
        var getcollection = "{{ collection.handle }}";
        // $('[data-collection-listing-container]').html('');
        productGrid += '<ul class="grid grid--uniform grid--view-items">';
        $.each(prodObj, function(i) {   
            var getprodlink = prodObj[i].link,
                prodLink = prodObj[i].link,
                prodQty = prodObj[i].quantity,
                prodTitle = prodObj[i].title,
                prodTags = prodObj[i].tags,
                prodImages = prodObj[i].shopify_images,
                prodPrice = parseInt(prodObj[i].price)*100,
                prodPrice = theme.Currency.formatMoney(prodPrice, theme.moneyFormat).replace('.00',''),                
                prodComparePrice = parseInt(prodObj[i].list_price)*100,
                prodPrice = theme.Currency.formatMoney(prodComparePrice, theme.moneyFormat).replace('.00',''),
                prodId = prodObj[i].id;

            getprodlink = '/collections/'+getcollection;
            var _thistags = prodTags;
            _thistags = _thistags.split('[:ATTR:]');
            var _this_variants = prodObj[i].shopify_variants;
            var _variantComparePrice = [];
            var _variantRegularPrice = [];
            var _variant_ComparePrice_Max = '';
            var _variant_ComparePrice_Min = '';
            var _variant_RegularPrice_Max = '';
            var _variant_RegularPrice_Min = '';

            if(prodQty <= 0 ){
              var prodAvaibility = 'grid-view-item--sold-out';
            }
            if(prodComparePrice != '') {
              var noDiscount = 'no_discount';

            }       
            if(prodImages.length > 1 ){
              var prodImgSlider = 'product_images_slider';
            }    

            // productGrid += '{% if product.compare_at_price %}<div class="compare_at_price">{{ product.compare_at_price | money | remove: '.00' }}</div>{% endif %}'
            //       productGrid += '{% assign discount = product.compare_at_price | minus: product.price | times: 100.0 | divided_by: product.compare_at_price %}'
            //       productGrid += '{% if product.compare_at_price %}<div class="product_discount">{{ discount | floor }}% OFF</div>{% endif %}'

            productGrid += '<li class="grid__item grid__item--solitaire-collection  aaa">';
            productGrid += '<div class="grid-view-item product-card">';
            productGrid += '<a class="grid-view-item__link grid-view-item__image-container full-width-link" href="'+getprodlink+'" style="display: none;"><span class="visually-hidden">'+prodTitle+'</span></a>';

            productGrid += '<div class="product-images-wrapper '+prodImgSlider+'" data-col-images-slider>';
             
                for (let j = 0; j < prodImages.length; j++) {
                  productGrid += '<div class="product-card__image-with-placeholder-wrapper product-images-slide" data-image-loading-animation><div id="" class="grid-view-item__image-wrapper product-card__image-wrapper js"><div class="product_img_holder"><img data-src="'+prodImages[j]+'" alt="'+ prodTitle+'" class="grid-view-item__image lazyload"></div></div></div>'
                }
              
                productGrid += '</div>'
            productGrid += '<div class="prodct_card_body">' 
              productGrid += '<div class="h4 grid-view-item__title product-card__title" aria-hidden="true"><a href="'+ prodLink +'">'+ prodTitle+'</a></div>'
              productGrid += '<span style="display: none;"></span>';

              productGrid += '<div class="product-price-card">'

                productGrid += '<div class="product-price-card-row">'
                productGrid += '<div class="product_weight">1 1/3 CTW.</div>'
                productGrid += '<div class="product_def">DEF</div>'
                productGrid += '<div class="product_compare">COMPARE</div>'
                productGrid += '</div>'


                productGrid += '<div class="product-price-card-row price_row '+noDiscount+'">'
                  productGrid += '<div class="ragular_price">'+ prodPrice +'</div>'
                  productGrid += '</div>'
              
                
                productGrid += '</div>'  
              productGrid += '</div>'
            productGrid += '</div>'
            productGrid += '</div>'
            productGrid += '</li>'

              
            
        });
        
            productGrid += '</ul>';

            // console.log(productGrid);
                $('[data-collection-listing-container]').append(productGrid);   
                  sliderInit();                           
                
      }

      function sliderInit(){
        $('[data-col-images-slider]').slick({
          autoplay: false,
          autoplaySpeed: 500,
          arrows: true,
          slidesToShow: 1,
          slidesToScroll: 1,
          Infinite: false,
          loop: false,
          dots: false
        });
      };

      //Initialize Price Slider
    	function initializingPriceSlider(minPrice, highestPrice, selectedMin, selectedMax){
          var getMinAmt = minPrice;
          var getMaxAmt = highestPrice;
            $('#price-min-val').val(minPrice);
            $('#price-max-val').val(highestPrice);      	
            $( "#slider-range" ).slider({
            range: true,
            min: parseFloat(minPrice),
            max: parseFloat(highestPrice),
            values: [ selectedMin, selectedMax ],
            slide: function( event, ui ) { 
              // $( "#collection-price-min" ).text("$" + minPrice);
              // $( "#collection-price-max" ).text("$" + highestPrice);
              // $('.price__filter').prev('.collection-content-area-left-heading').find('.selRange').remove();
    			// if(parseFloat(ui.values[ 0 ].toFixed(2)) > parseFloat(minPrice) || parseFloat(ui.values[ 1 ].toFixed(2)) < parseFloat(highestPrice)){
                // $('.price__filter').prev('.collection-content-area-left-heading').append('<i class="selRange">($' + ui.values[ 0 ].toFixed(2) +' - $' + ui.values[ 1 ].toFixed(2) + ')</i>');
               priceSelected = '&restrictBy[price]=' + ui.values[ 0 ] + ','+ ui.values[ 1 ];
    			// }    
            },
            stop: function( event, ui ) {
              // $('#price-val-range').attr('data-opt-val', '&restrictBy[price]=' + ui.values[ 0 ] + ','+ ui.values[ 1 ]).val('&restrictBy[price]=' + ui.values[ 0 ] + ','+ ui.values[ 1 ]).attr('checked', 'checked').change(); 
            }
          });
          // $( "#collection-price-min" ).text( "$" + minPrice);
          // $( "#collection-price-max" ).text( "$" + highestPrice);
          // $('.price__filter').prev('.collection-content-area-left-heading').find('.selRange').remove();

          if(parseFloat(selectedMin) > parseFloat(minPrice) || parseFloat(selectedMax) < parseFloat(highestPrice)){
            // $('.price__filter').prev('.collection-content-area-left-heading').append('<i class="selRange">($' + selectedMin +' - $' + selectedMax + ')</i>');
          }      
        }
    	//Initialize Price Slider Ends
  });
  </script>
